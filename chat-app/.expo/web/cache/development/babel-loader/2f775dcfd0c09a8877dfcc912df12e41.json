{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\screens\\\\ChatBox.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport ChatMessage from \"../components/ChatMessage\";\nimport SendMessageForm from \"../components/SendMessageForm\";\nimport 'firebase/firestore';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nvar io = require('socket.io-client');\n\nvar socketEndpoint = 'http://192.168.10.118:4167';\nexport default function ChatBox(props) {\n  var _useCollectionData,\n      _useCollectionData2,\n      _this = this;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var fontRatio = PixelRatio.getFontScale();\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore;\n\n  var _useState3 = useState('false'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      connected = _useState4[0],\n      setConnected = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pingData = _useState6[0],\n      setPingData = _useState6[1];\n\n  var messageRef = firestore.collection('messages' + props.roomCode);\n  var query = messageRef.orderBy('createdAt', 'desc').limit(25);\n  var messages = null;\n  var scrollViewRef = (_useCollectionData = useCollectionData(query, {\n    idField: 'id'\n  }), _useCollectionData2 = _slicedToArray(_useCollectionData, 1), messages = _useCollectionData2[0], _useCollectionData);\n  useEffect(function () {\n    scrollViewRef.current.scrollToEnd({\n      animated: false\n    });\n  }, []);\n\n  var ShowMessages = function ShowMessages() {\n    return messages && messages.slice(0).reverse().map(function (msg) {\n      return React.createElement(ChatMessage, {\n        key: msg.id,\n        message: msg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 63\n        }\n      });\n    });\n  };\n\n  var stylesChatBox = StyleSheet.create({\n    chatRoomContainer: {\n      flex: 1,\n      backgroundColor: '#2A2B2DFF',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    messagesContainer: {\n      flex: 1,\n      flexDirection: 'column',\n      flexGrow: 0,\n      justifyContent: 'flex-start',\n      minWidth: width,\n      maxWidth: width,\n      maxHeight: 0.86 * height,\n      minHeight: 0.86 * height,\n      padding: 10 * fontRatio\n    },\n    SentMessageContainer: {\n      flex: 1,\n      flexDirection: 'row-reverse',\n      justifyContent: 'flex-start',\n      flexShrink: 1,\n      alignItems: 'center',\n      marginTop: 20 * fontRatio,\n      marginBottom: 10 * fontRatio,\n      marginLeft: 50 * fontRatio,\n      marginRight: 10 * fontRatio\n    },\n    SentMessageText: {\n      fontSize: 15,\n      backgroundColor: '#2DA8D8FF',\n      color: 'black',\n      marginRight: 10 * fontRatio,\n      borderRadius: 0,\n      padding: 8 * fontRatio,\n      maxWidth: 0.1 * width\n    },\n    ReceivedMessageContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginTop: 10 * fontRatio,\n      marginBottom: 1 * fontRatio,\n      marginLeft: 1 * fontRatio,\n      marginRight: 10 * fontRatio,\n      minHeight: 'auto'\n    },\n    ReceivedMessageText: {\n      fontSize: 15,\n      backgroundColor: '#D9514EFF',\n      color: '#fff',\n      marginLeft: 10 * fontRatio,\n      borderRadius: 25,\n      padding: 8 * fontRatio,\n      alignSelf: 'center',\n      maxWidth: 100\n    },\n    profileImage: {\n      width: 50 * fontRatio,\n      height: 50 * fontRatio,\n      borderRadius: 25,\n      alignSelf: 'center'\n    }\n  });\n  return React.createElement(View, {\n    style: {\n      minHeight: 0.93 * height,\n      maxHeight: 0.93 * height,\n      top: 0.07 * height,\n      left: 0,\n      position: 'absolute'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: stylesChatBox.chatRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: stylesChatBox.messagesContainer,\n    ref: scrollViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, ShowMessages())), React.createElement(SendMessageForm, {\n    messageRef: messageRef,\n    firestore: firestore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/screens/ChatBox.js"],"names":["React","useContext","useEffect","useRef","useState","AuthContext","ChatMessage","SendMessageForm","useCollectionData","io","require","socketEndpoint","ChatBox","props","useWindowDimensions","width","height","loading","setLoading","fontRatio","PixelRatio","getFontScale","auth","firestore","connected","setConnected","pingData","setPingData","messageRef","collection","roomCode","query","orderBy","limit","messages","scrollViewRef","idField","current","scrollToEnd","animated","ShowMessages","slice","reverse","map","msg","id","stylesChatBox","StyleSheet","create","chatRoomContainer","flex","backgroundColor","alignItems","justifyContent","messagesContainer","flexDirection","flexGrow","minWidth","maxWidth","maxHeight","minHeight","padding","SentMessageContainer","flexShrink","marginTop","marginBottom","marginLeft","marginRight","SentMessageText","fontSize","color","borderRadius","ReceivedMessageContainer","ReceivedMessageText","alignSelf","profileImage","top","left","position"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, ScrollView, useWindowDimensions,PixelRatio } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\nimport ChatMessage from '../components/ChatMessage';\r\nimport SendMessageForm from '../components/SendMessageForm';\r\n//import stylesChatBox from '../styles/chatBoxStyle'\r\nimport 'firebase/firestore';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst io = require('socket.io-client')\r\nconst socketEndpoint = 'http://192.168.10.118:4167'\r\n\r\n\r\nexport default function ChatBox(props) {\r\n  const {width, height} = useWindowDimensions()\r\n  const [loading, setLoading] = useState(true);\r\n  const fontRatio = PixelRatio.getFontScale()\r\n\r\n  //firebase user auth\r\n  const { auth, firestore } = useContext(AuthContext);\r\n  //firestore setup\r\n\r\n\r\n  //socket.io states\r\n  const [connected, setConnected] = useState('false');\r\n  const [pingData, setPingData] = useState('');\r\n  \r\n  const messageRef = firestore.collection('messages' + props.roomCode);\r\n  const query = messageRef.orderBy('createdAt', 'desc').limit(25);\r\n  var [messages] = [null]\r\n  const scrollViewRef = [messages] = useCollectionData(query, { idField: 'id' })\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    scrollViewRef.current.scrollToEnd({ animated: false })\r\n\r\n    //var socket = io(socketEndpoint);\r\n  },[])\r\n\r\n\r\n  const ShowMessages = () => {\r\n    return messages && messages.slice(0).reverse().map(msg => <ChatMessage key={msg.id} message={msg} />)\r\n\r\n  }\r\n\r\n\r\n  const stylesChatBox = StyleSheet.create({\r\n    chatRoomContainer: {\r\n        flex: 1,\r\n        backgroundColor: '#2A2B2DFF',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    messagesContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        flexGrow: 0,\r\n        justifyContent: 'flex-start',\r\n        minWidth: width,\r\n        maxWidth: width,\r\n        maxHeight: 0.86*height,\r\n        minHeight: 0.86*height,\r\n        padding: 10 * fontRatio\r\n\r\n    },\r\n    SentMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row-reverse',\r\n        justifyContent: 'flex-start',\r\n        flexShrink: 1,\r\n        alignItems: 'center',\r\n        marginTop: 20 * fontRatio,\r\n        marginBottom: 10* fontRatio,\r\n        marginLeft: 50* fontRatio,\r\n        marginRight: 10* fontRatio,\r\n\r\n    },\r\n    SentMessageText:{\r\n        fontSize: 15,\r\n        backgroundColor: '#2DA8D8FF',\r\n        color: 'black',\r\n        marginRight: 10* fontRatio,\r\n        borderRadius: 0,\r\n        padding: 8* fontRatio,\r\n        maxWidth: 0.1* width\r\n    },\r\n    ReceivedMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginTop: 10* fontRatio,\r\n        marginBottom: 1* fontRatio,\r\n        marginLeft: 1* fontRatio,\r\n        marginRight: 10* fontRatio,\r\n        minHeight: 'auto'\r\n \r\n    },\r\n    ReceivedMessageText: {\r\n        fontSize: 15,\r\n        backgroundColor: '#D9514EFF',\r\n        color: '#fff',\r\n        marginLeft: 10* fontRatio,\r\n        borderRadius: 25,\r\n        padding: 8* fontRatio,\r\n        alignSelf: 'center',\r\n        maxWidth: 100\r\n    },\r\n    profileImage :{\r\n        width: 50* fontRatio,\r\n        height: 50* fontRatio,\r\n        borderRadius: 25,\r\n        alignSelf: 'center'\r\n    }\r\n});\r\n\r\n  return (\r\n    <View style={{minHeight: 0.93*height, maxHeight: 0.93*height,\r\n      top:0.07 * height, left: 0, position:'absolute',}}>\r\n        <View style={stylesChatBox.chatRoomContainer}>\r\n          <ScrollView\r\n            contentContainerStyle={stylesChatBox.messagesContainer}\r\n            ref={scrollViewRef}>\r\n\r\n            {ShowMessages()}\r\n          </ScrollView>\r\n        </View>\r\n      <SendMessageForm messageRef={messageRef} firestore={firestore} />\r\n    </View>\r\n\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}