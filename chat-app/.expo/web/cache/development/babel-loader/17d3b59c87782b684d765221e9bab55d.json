{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\screens\\\\LoginScreen.js\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as GoogleSignIn from 'expo-google-sign-in';\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport AuthContext from \"../contexts/AuthContext\";\nexport default function LoginScreen(props) {\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      setLoadingApp = _useContext.setLoadingApp;\n\n  var signInWithGoogle = function signInWithGoogle() {\n    if (Platform.OS == 'android' || Platform.OS == 'ios') {\n      props.googleLogin();\n    } else {\n      console.log('helllooo there phone');\n      var provider = new firebase.auth.GoogleAuthProvider();\n      auth.signInWithRedirect(provider);\n    }\n  };\n\n  var fontRatio = PixelRatio.getFontScale();\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var styles = StyleSheet.create({\n    LoginContainer: {\n      position: 'absolute',\n      top: 0.07 * height,\n      left: 0,\n      flex: 1,\n      flexDirection: 'column',\n      backgroundColor: '#2A2B2DFF',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      minHeight: 0.93 * height,\n      maxHeight: 0.93 * height,\n      width: width\n    },\n    LoginTitle: {\n      fontSize: 40,\n      color: '#fff',\n      marginTop: 10 * fontRatio\n    },\n    loginButton: {\n      backgroundColor: '#D9514EFF',\n      borderRadius: 25,\n      marginBottom: 20 * fontRatio,\n      height: 100\n    },\n    LoginText: {\n      padding: 10 * fontRatio,\n      color: '#fff',\n      fontSize: 30\n    }\n  });\n  return React.createElement(View, {\n    style: styles.LoginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.LoginTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return signInWithGoogle();\n    },\n    style: styles.loginButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.LoginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Sign in with Google\")));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/screens/LoginScreen.js"],"names":["React","useState","useContext","TouchableOpacity","GoogleSignIn","firebase","AuthContext","LoginScreen","props","auth","setLoadingApp","signInWithGoogle","Platform","OS","googleLogin","console","log","provider","GoogleAuthProvider","signInWithRedirect","fontRatio","PixelRatio","getFontScale","useWindowDimensions","width","height","styles","StyleSheet","create","LoginContainer","position","top","left","flex","flexDirection","backgroundColor","alignItems","justifyContent","minHeight","maxHeight","LoginTitle","fontSize","color","marginTop","loginButton","borderRadius","marginBottom","LoginText","padding"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, Image, useWindowDimensions,PixelRatio, Platform} from 'react-native'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler'\r\nimport * as GoogleSignIn from 'expo-google-sign-in';\r\nimport firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport AuthContext from '../contexts/AuthContext';\r\n\r\nexport default function LoginScreen(props) {\r\n\r\n    const {auth, setLoadingApp} = useContext(AuthContext)\r\n    const signInWithGoogle = () =>{\r\n        if(Platform.OS == 'android' || Platform.OS == 'ios'){\r\n            props.googleLogin()\r\n        }\r\n        else{\r\n            console.log('helllooo there phone')\r\n            const provider = new firebase.auth.GoogleAuthProvider();\r\n            auth.signInWithRedirect(provider);\r\n        }\r\n    }\r\n    const fontRatio = PixelRatio.getFontScale()\r\n\r\n    const {width, height} = useWindowDimensions()\r\n    const styles = StyleSheet.create({\r\n        LoginContainer :{\r\n            position: 'absolute',\r\n            top: 0.07* height,\r\n            left: 0,\r\n            flex : 1,\r\n            flexDirection: 'column',\r\n            backgroundColor : '#2A2B2DFF',\r\n            alignItems : 'center',\r\n            justifyContent : 'flex-start',\r\n            minHeight: 0.93*height,\r\n            maxHeight: 0.93*height,\r\n            width: width\r\n            \r\n        },\r\n        LoginTitle: {\r\n            fontSize: 40, \r\n            color: '#fff',\r\n            marginTop: 10* fontRatio,\r\n        },  \r\n        loginButton: {\r\n            backgroundColor: '#D9514EFF',\r\n            borderRadius: 25,\r\n            marginBottom: 20* fontRatio,\r\n            height: 100\r\n            \r\n            \r\n        },\r\n        LoginText: {\r\n            padding: 10* fontRatio,\r\n            color: '#fff',\r\n            fontSize: 30\r\n    \r\n        }\r\n    \r\n    })\r\n\r\n    return (\r\n        <View style={styles.LoginContainer}>\r\n            <Text style={styles.LoginTitle}>Login</Text>\r\n            <TouchableOpacity onPress={() => signInWithGoogle()} style={styles.loginButton}>\r\n                <Text style={styles.LoginText}>Sign in with Google</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}