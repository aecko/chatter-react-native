{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\src\\\\screens\\\\MainChatScreen.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport ChatMessage from \"../components/ChatMessage\";\nimport SendMessageForm from \"../components/SendMessageForm\";\nimport NavBar from \"../components/NavBar\";\nimport 'firebase/firestore';\nimport UsersRooms from \"../components/UsersRooms\";\nimport Welcome from \"./Welcome\";\n\nvar io = require('socket.io-client');\n\nvar socketEndpoint = 'http://192.168.10.118:4167';\nexport default function MainChatScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var fontRatio = PixelRatio.getFontScale();\n  var userRef = firestore.collection('users').doc(auth.currentUser.uid);\n\n  var _useDocumentData = useDocumentData(userRef),\n      _useDocumentData2 = _slicedToArray(_useDocumentData, 1),\n      userDetails = _useDocumentData2[0];\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore,\n      messages = _useContext.messages;\n\n  var _useState = useState('false'),\n      _useState2 = _slicedToArray(_useState, 2),\n      connected = _useState2[0],\n      setConnected = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pingData = _useState4[0],\n      setPingData = _useState4[1];\n\n  var scrollViewRef = useRef();\n  useEffect(function () {\n    scrollViewRef.current.scrollToEnd({\n      animated: false\n    });\n  }, [messages]);\n\n  var ShowMessages = function ShowMessages() {\n    return messages && messages.slice(0).reverse().map(function (msg) {\n      return React.createElement(ChatMessage, {\n        key: msg.id,\n        message: msg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 65\n        }\n      });\n    });\n  };\n\n  var stylesChatBox = StyleSheet.create({\n    chatRoomContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      backgroundColor: '#2A2B2DFF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      maxHeight: 0.93 * height,\n      maxWidth: width,\n      alignSelf: 'stretch'\n    },\n    messagesContainer: {\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      flexGrow: 100,\n      maxHeight: 0.86 * height,\n      minHeight: 0.86 * height,\n      padding: 10 * fontRatio\n    },\n    SentMessageContainer: {\n      flex: 1,\n      flexDirection: 'row-reverse',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      marginTop: 20 * fontRatio,\n      marginBottom: 10 * fontRatio,\n      marginLeft: 50 * fontRatio,\n      marginRight: 10 * fontRatio\n    },\n    SentMessageText: {\n      fontSize: 15,\n      backgroundColor: '#2DA8D8FF',\n      color: 'black',\n      marginRight: 10 * fontRatio,\n      borderRadius: 0,\n      padding: 8 * fontRatio,\n      maxWidth: 0.1 * width\n    },\n    ReceivedMessageContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginTop: 10 * fontRatio,\n      marginBottom: 1 * fontRatio,\n      marginLeft: 1 * fontRatio,\n      marginRight: 10 * fontRatio,\n      minHeight: 'auto'\n    },\n    ReceivedMessageText: {\n      fontSize: 15,\n      backgroundColor: '#D9514EFF',\n      color: '#fff',\n      marginLeft: 10 * fontRatio,\n      borderRadius: 25,\n      padding: 8 * fontRatio,\n      alignSelf: 'center',\n      maxWidth: 100\n    },\n    profileImage: {\n      width: 50 * fontRatio,\n      height: 50 * fontRatio,\n      borderRadius: 25,\n      alignSelf: 'center'\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), userDetails ? React.createElement(React.Fragment, null, React.createElement(UsersRooms, {\n    userDetails: userDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      minHeight: 0.93 * height,\n      maxHeight: 0.93 * height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: stylesChatBox.chatRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: stylesChatBox.messagesContainer,\n    ref: scrollViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, ShowMessages())), React.createElement(SendMessageForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }))) : React.createElement(Welcome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/src/screens/MainChatScreen.js"],"names":["React","useContext","useEffect","useRef","useState","AuthContext","ChatMessage","SendMessageForm","NavBar","UsersRooms","Welcome","io","require","socketEndpoint","MainChatScreen","navigation","useWindowDimensions","width","height","fontRatio","PixelRatio","getFontScale","userRef","firestore","collection","doc","auth","currentUser","uid","useDocumentData","userDetails","messages","connected","setConnected","pingData","setPingData","scrollViewRef","current","scrollToEnd","animated","ShowMessages","slice","reverse","map","msg","id","stylesChatBox","StyleSheet","create","chatRoomContainer","flex","flexDirection","justifyContent","alignItems","backgroundColor","maxHeight","maxWidth","alignSelf","messagesContainer","flexGrow","minHeight","padding","SentMessageContainer","marginTop","marginBottom","marginLeft","marginRight","SentMessageText","fontSize","color","borderRadius","ReceivedMessageContainer","ReceivedMessageText","profileImage"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, ScrollView, useWindowDimensions,PixelRatio } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\nimport ChatMessage from '../components/ChatMessage';\r\nimport SendMessageForm from '../components/SendMessageForm';\r\nimport NavBar from '../components/NavBar'\r\nimport 'firebase/firestore';\r\nimport UsersRooms from '../components/UsersRooms';\r\nimport Welcome from './Welcome';\r\n\r\n\r\nconst io = require('socket.io-client')\r\nconst socketEndpoint = 'http://192.168.10.118:4167'\r\n\r\n\r\nexport default function MainChatScreen({navigation}) {\r\n  const {width, height} = useWindowDimensions()\r\n  const fontRatio = PixelRatio.getFontScale()\r\n  const userRef = firestore.collection('users').doc(auth.currentUser.uid)\r\n  const [userDetails] = useDocumentData(userRef)\r\n\r\n  //firebase user auth\r\n  const { auth, firestore, messages,} = useContext(AuthContext);\r\n  //firestore setup\r\n\r\n  //socket.io states\r\n  const [connected, setConnected] = useState('false');\r\n  const [pingData, setPingData] = useState('');\r\n\r\n\r\n  const scrollViewRef = useRef();\r\n\r\n  useEffect(() => {\r\n    scrollViewRef.current.scrollToEnd({ animated: false })\r\n    //var socket = io(socketEndpoint);\r\n  },[messages])\r\n\r\n\r\n  const ShowMessages = () => {\r\n      return messages && messages.slice(0).reverse().map(msg => <ChatMessage key={msg.id} message={msg} />)\r\n  }\r\n\r\n\r\n  const stylesChatBox = StyleSheet.create({\r\n    chatRoomContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        backgroundColor: '#2A2B2DFF',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxHeight: 0.93 * height,\r\n        maxWidth: width,\r\n        alignSelf: 'stretch'\r\n    },\r\n    messagesContainer: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        flexGrow: 100,\r\n        maxHeight: 0.86*height,\r\n        minHeight: 0.86*height,\r\n        padding: 10 * fontRatio,\r\n    },\r\n    SentMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row-reverse',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        marginTop: 20 * fontRatio,\r\n        marginBottom: 10* fontRatio,\r\n        marginLeft: 50* fontRatio,\r\n        marginRight: 10* fontRatio,\r\n\r\n\r\n    },\r\n    SentMessageText:{\r\n        fontSize: 15,\r\n        backgroundColor: '#2DA8D8FF',\r\n        color: 'black',\r\n        marginRight: 10* fontRatio,\r\n        borderRadius: 0,\r\n        padding: 8* fontRatio,\r\n        maxWidth: 0.1* width\r\n    },\r\n    ReceivedMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginTop: 10* fontRatio,\r\n        marginBottom: 1* fontRatio,\r\n        marginLeft: 1* fontRatio,\r\n        marginRight: 10* fontRatio,\r\n        minHeight: 'auto'\r\n \r\n    },\r\n    ReceivedMessageText: {\r\n        fontSize: 15,\r\n        backgroundColor: '#D9514EFF',\r\n        color: '#fff',\r\n        marginLeft: 10* fontRatio,\r\n        borderRadius: 25,\r\n        padding: 8* fontRatio,\r\n        alignSelf: 'center',\r\n        maxWidth: 100\r\n    },\r\n    profileImage :{\r\n        width: 50* fontRatio,\r\n        height: 50* fontRatio,\r\n        borderRadius: 25,\r\n        alignSelf: 'center'\r\n    }\r\n});\r\n\r\n  return (\r\n    <>\r\n      <NavBar navigation={navigation}/>\r\n      {userDetails ?\r\n      <>\r\n      <UsersRooms userDetails={userDetails} />\r\n      <View style={{minHeight: 0.93*height, maxHeight: 0.93*height}}>\r\n          <View style={stylesChatBox.chatRoomContainer}>\r\n            <ScrollView\r\n              contentContainerStyle={stylesChatBox.messagesContainer}\r\n              ref={scrollViewRef}>\r\n              {ShowMessages()}\r\n            </ScrollView>\r\n          </View>\r\n        <SendMessageForm />\r\n      </View>\r\n      </> : <Welcome/>}\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}