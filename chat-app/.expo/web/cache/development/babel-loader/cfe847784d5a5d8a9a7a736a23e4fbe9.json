{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\components\\\\UsersRooms.js\";\nimport React, { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport RoomIcon from \"./RoomIcon\";\nexport default function UsersRooms(props) {\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentRooms = _useState2[0],\n      setCurrentRooms = _useState2[1];\n\n  var getRooms = function getRooms() {\n    var currentRooms, userRef;\n    return _regeneratorRuntime.async(function getRooms$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currentRooms = [];\n\n            if (auth.currentUser != null) {\n              userRef = firestore.collection('users').doc(auth.currentUser.uid);\n              userRef.get().then(function (docSnapShot) {\n                console.log(docSnapShot);\n\n                if (docSnapShot.exists) {\n                  console.log(docSnapShot.data().currentRooms);\n                  currentRooms = docSnapShot.data().currentRooms;\n                }\n              });\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.RoomsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, getRooms());\n}\nvar styles = StyleSheet.create({\n  RoomsContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignContent: 'center',\n    backgroundColor: '#fff',\n    minHeight: 900,\n    maxWidth: 90,\n    minWidth: 90,\n    zIndex: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/components/UsersRooms.js"],"names":["React","useContext","useState","AuthContext","RoomIcon","UsersRooms","props","auth","firestore","currentRooms","setCurrentRooms","getRooms","currentUser","userRef","collection","doc","uid","get","then","docSnapShot","console","log","exists","data","styles","RoomsContainer","StyleSheet","create","position","top","left","flex","flexDirection","justifyContent","alignContent","backgroundColor","minHeight","maxWidth","minWidth","zIndex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBACVL,UAAU,CAACE,WAAD,CADA;AAAA,MAC9BI,IAD8B,eAC9BA,IAD8B;AAAA,MACxBC,SADwB,eACxBA,SADwB;;AAAA,kBAEEN,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAE/BO,YAF+B;AAAA,MAEjBC,eAFiB;;AAItC,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACTF,YAAAA,YADS,GACM,EADN;;AAEb,gBAAIF,IAAI,CAACK,WAAL,IAAoB,IAAxB,EAA8B;AACpBC,cAAAA,OADoB,GACVL,SAAS,CAACM,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCR,IAAI,CAACK,WAAL,CAAiBI,GAAnD,CADU;AAE1BH,cAAAA,OAAO,CAACI,GAAR,GACKC,IADL,CACU,UAACC,WAAD,EAAiB;AACnBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AACA,oBAAIA,WAAW,CAACG,MAAhB,EAAwB;AACpBF,kBAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACI,IAAZ,GAAmBd,YAA/B;AACAA,kBAAAA,YAAY,GAAGU,WAAW,CAACI,IAAZ,GAAmBd,YAAlC;AACH;AACJ,eAPL;AAQH;;AAZY,6CAaN,IAbM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAgBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,QAAQ,EADb,CADJ;AAKH;AAED,IAAMa,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,cAAc,EAAE;AACZG,IAAAA,QAAQ,EAAE,UADE;AAEZC,IAAAA,GAAG,EAAE,CAFO;AAGZC,IAAAA,IAAI,EAAE,CAHM;AAIZC,IAAAA,IAAI,EAAE,CAJM;AAKZC,IAAAA,aAAa,EAAE,QALH;AAMZC,IAAAA,cAAc,EAAE,YANJ;AAOZC,IAAAA,YAAY,EAAE,QAPF;AAQZC,IAAAA,eAAe,EAAE,MARL;AASZC,IAAAA,SAAS,EAAE,GATC;AAUZC,IAAAA,QAAQ,EAAE,EAVE;AAWZC,IAAAA,QAAQ,EAAE,EAXE;AAYZC,IAAAA,MAAM,EAAE;AAZI;AADa,CAAlB,CAAf","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport AuthContext from '../contexts/AuthContext'\r\nimport RoomIcon from './RoomIcon'\r\n\r\nexport default function UsersRooms(props) {\r\n    const { auth, firestore } = useContext(AuthContext)\r\n    const [currentRooms, setCurrentRooms] = useState([])\r\n\r\n    const getRooms = async() => {\r\n        var currentRooms = []\r\n        if (auth.currentUser != null) {\r\n            const userRef = firestore.collection('users').doc(auth.currentUser.uid)\r\n            userRef.get()\r\n                .then((docSnapShot) => {\r\n                    console.log(docSnapShot)\r\n                    if (docSnapShot.exists) {\r\n                        console.log(docSnapShot.data().currentRooms)\r\n                        currentRooms = docSnapShot.data().currentRooms\r\n                    }\r\n                })\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <View style={styles.RoomsContainer}>\r\n            {getRooms()}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    RoomsContainer: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignContent: 'center',\r\n        backgroundColor: '#fff',\r\n        minHeight: 900,\r\n        maxWidth: 90,\r\n        minWidth: 90,\r\n        zIndex: 100\r\n\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}