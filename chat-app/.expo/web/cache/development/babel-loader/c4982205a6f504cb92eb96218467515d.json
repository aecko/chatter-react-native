{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\components\\\\CreateRoomScreen.js\";\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nexport default function CreateRoomScreen() {\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var fontRatio = PixelRatio.getFontScale();\n  var styles = StyleSheet.create({\n    CreateRoomContainer: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: 400 * fontRatio,\n      height: 250 * fontRatio,\n      borderRadius: 20,\n      backgroundColor: '#fff',\n      position: 'absolute',\n      top: height / 2 - 125,\n      left: width / 2 - 200,\n      zIndex: 100,\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 0,\n        height: -1\n      },\n      shadowOpacity: 0.9,\n      shadowRadius: 50,\n      elevation: 5\n    },\n    CreateRoomTitle: {\n      fontSize: 20,\n      zIndex: 100\n    },\n    CreateRoomTextInput: {},\n    DarkOverlay: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n      height: height,\n      backgroundColor: '#0b2946',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 50,\n      opacity: 0.8\n    },\n    CreateRoomHeader: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: 400 * fontRatio,\n      maxHeight: 60 * fontRatio,\n      borderTopLeftRadius: 20,\n      borderTopRightRadius: 20,\n      backgroundColor: '#3498db'\n    },\n    CreateRoomInputContainer: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    CreateRoomCloseButton: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#3498db',\n      marginRight: 'auto',\n      maxWidth: 30 * fontRatio\n    },\n    CloseMenuText: {\n      fontSize: 20,\n      color: '#fff',\n      padding: 5 * fontRatio\n    }\n  });\n  return React.createElement(View, {\n    style: styles.DarkOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.CreateRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.CreateRoomHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.CreateRoomCloseButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.CloseMenuText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"X\")), React.createElement(Text, {\n    style: styles.CreateRoomTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Create a new room\")), React.createElement(View, {\n    style: styles.CreateRoomInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.CreateRoomTextInput,\n    placeholder: \"Enter the name of the new room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Create Room\")))));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/components/CreateRoomScreen.js"],"names":["React","useContext","CreateRoomScreen","useWindowDimensions","width","height","fontRatio","PixelRatio","getFontScale","styles","StyleSheet","create","CreateRoomContainer","flex","flexDirection","justifyContent","alignItems","borderRadius","backgroundColor","position","top","left","zIndex","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","CreateRoomTitle","fontSize","CreateRoomTextInput","DarkOverlay","opacity","CreateRoomHeader","maxHeight","borderTopLeftRadius","borderTopRightRadius","CreateRoomInputContainer","CreateRoomCloseButton","marginRight","maxWidth","CloseMenuText","color","padding"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, useWindowDimensions, PixelRatio } from 'react-native'\r\n\r\nexport default function CreateRoomScreen() {\r\n\r\n    const { width, height } = useWindowDimensions()\r\n    const fontRatio = PixelRatio.getFontScale()\r\n    const styles = StyleSheet.create({\r\n        CreateRoomContainer: {\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n            width: 400 * fontRatio,\r\n            height: 250 * fontRatio,\r\n            borderRadius: 20,\r\n            backgroundColor: '#fff',\r\n            position: 'absolute',\r\n            top: height / 2 - 125,\r\n            left: width / 2 - 200,\r\n            zIndex: 100,\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 0, height: -1, },\r\n            shadowOpacity: 0.9,\r\n            shadowRadius: 50,\r\n            elevation: 5,\r\n        },\r\n        CreateRoomTitle: {\r\n            fontSize: 20,\r\n            zIndex: 100,\r\n        },\r\n        CreateRoomTextInput: {\r\n\r\n        },\r\n        DarkOverlay: {\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n            width: width,\r\n            height: height,\r\n            backgroundColor: '#0b2946',\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 50,\r\n            opacity: 0.8\r\n        },\r\n        CreateRoomHeader: {\r\n            flex: 1,\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: 400 * fontRatio,\r\n            maxHeight: 60 * fontRatio,\r\n            borderTopLeftRadius: 20,\r\n            borderTopRightRadius: 20,\r\n            backgroundColor: '#3498db'\r\n        },\r\n        CreateRoomInputContainer: {\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        CreateRoomCloseButton: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#3498db',\r\n            marginRight: 'auto',\r\n            maxWidth: 30* fontRatio\r\n\r\n        },\r\n        CloseMenuText: {\r\n            fontSize: 20,\r\n            color: '#fff',\r\n            padding: 5* fontRatio,\r\n        }\r\n\r\n    })\r\n    return (\r\n        <View style={styles.DarkOverlay}>\r\n            <View style={styles.CreateRoomContainer}>\r\n                <View style={styles.CreateRoomHeader} >\r\n                    <TouchableOpacity style={styles.CreateRoomCloseButton}>\r\n                        <Text style={styles.CloseMenuText}>X</Text>\r\n                    </TouchableOpacity>\r\n                    <Text style={styles.CreateRoomTitle}>Create a new room</Text>\r\n                </ View>\r\n                <View style={styles.CreateRoomInputContainer}>\r\n                    <TextInput style={styles.CreateRoomTextInput} placeholder='Enter the name of the new room'></TextInput>\r\n                    <TouchableOpacity>\r\n                        <Text>Create Room</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}