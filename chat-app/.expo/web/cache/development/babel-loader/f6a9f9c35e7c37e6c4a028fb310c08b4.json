{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\screens\\\\ChatBox.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport ChatMessage from \"../components/ChatMessage\";\nimport SendMessageForm from \"../components/SendMessageForm\";\nimport 'firebase/firestore';\n\nvar io = require('socket.io-client');\n\nvar socketEndpoint = 'http://192.168.10.118:4167';\nexport default function ChatBox(props) {\n  var _this = this;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var fontRatio = PixelRatio.getFontScale();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore,\n      messages = _useContext.messages;\n\n  var _useState3 = useState('false'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      connected = _useState4[0],\n      setConnected = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pingData = _useState6[0],\n      setPingData = _useState6[1];\n\n  console.log('helllooo there jes');\n  var scrollViewRef = useRef();\n  useEffect(function () {\n    scrollViewRef.current.scrollToEnd({\n      animated: false\n    });\n  }, [messages]);\n\n  var ShowMessages = function ShowMessages() {\n    return messages && messages.slice(0).reverse().map(function (msg) {\n      return React.createElement(ChatMessage, {\n        key: msg.id,\n        message: msg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 65\n        }\n      });\n    });\n  };\n\n  var stylesChatBox = StyleSheet.create({\n    chatRoomContainer: {\n      flex: 1,\n      backgroundColor: '#2A2B2DFF',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    messagesContainer: {\n      flex: 1,\n      flexDirection: 'column',\n      flexGrow: 0,\n      justifyContent: 'flex-start',\n      minWidth: width,\n      maxWidth: width,\n      maxHeight: 0.86 * height,\n      minHeight: 0.86 * height,\n      padding: 10 * fontRatio\n    },\n    SentMessageContainer: {\n      flex: 1,\n      flexDirection: 'row-reverse',\n      justifyContent: 'flex-start',\n      flexShrink: 1,\n      alignItems: 'center',\n      marginTop: 20 * fontRatio,\n      marginBottom: 10 * fontRatio,\n      marginLeft: 50 * fontRatio,\n      marginRight: 10 * fontRatio\n    },\n    SentMessageText: {\n      fontSize: 15,\n      backgroundColor: '#2DA8D8FF',\n      color: 'black',\n      marginRight: 10 * fontRatio,\n      borderRadius: 0,\n      padding: 8 * fontRatio,\n      maxWidth: 0.1 * width\n    },\n    ReceivedMessageContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginTop: 10 * fontRatio,\n      marginBottom: 1 * fontRatio,\n      marginLeft: 1 * fontRatio,\n      marginRight: 10 * fontRatio,\n      minHeight: 'auto'\n    },\n    ReceivedMessageText: {\n      fontSize: 15,\n      backgroundColor: '#D9514EFF',\n      color: '#fff',\n      marginLeft: 10 * fontRatio,\n      borderRadius: 25,\n      padding: 8 * fontRatio,\n      alignSelf: 'center',\n      maxWidth: 100\n    },\n    profileImage: {\n      width: 50 * fontRatio,\n      height: 50 * fontRatio,\n      borderRadius: 25,\n      alignSelf: 'center'\n    }\n  });\n  return React.createElement(View, {\n    style: {\n      minHeight: 0.93 * height,\n      maxHeight: 0.93 * height,\n      top: 0.07 * height,\n      left: 0,\n      position: 'absolute'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: stylesChatBox.chatRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: stylesChatBox.messagesContainer,\n    ref: scrollViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, ShowMessages())), React.createElement(SendMessageForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/screens/ChatBox.js"],"names":["React","useContext","useEffect","useRef","useState","AuthContext","ChatMessage","SendMessageForm","io","require","socketEndpoint","ChatBox","props","useWindowDimensions","width","height","fontRatio","PixelRatio","getFontScale","loaded","setLoaded","auth","firestore","messages","connected","setConnected","pingData","setPingData","console","log","scrollViewRef","current","scrollToEnd","animated","ShowMessages","slice","reverse","map","msg","id","stylesChatBox","StyleSheet","create","chatRoomContainer","flex","backgroundColor","alignItems","justifyContent","messagesContainer","flexDirection","flexGrow","minWidth","maxWidth","maxHeight","minHeight","padding","SentMessageContainer","flexShrink","marginTop","marginBottom","marginLeft","marginRight","SentMessageText","fontSize","color","borderRadius","ReceivedMessageContainer","ReceivedMessageText","alignSelf","profileImage","top","left","position"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, ScrollView, useWindowDimensions,PixelRatio } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\nimport ChatMessage from '../components/ChatMessage';\r\nimport SendMessageForm from '../components/SendMessageForm';\r\n//import stylesChatBox from '../styles/chatBoxStyle'\r\nimport 'firebase/firestore';\r\n\r\n\r\nconst io = require('socket.io-client')\r\nconst socketEndpoint = 'http://192.168.10.118:4167'\r\n\r\n\r\nexport default function ChatBox(props) {\r\n  const {width, height} = useWindowDimensions()\r\n  const fontRatio = PixelRatio.getFontScale()\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  //firebase user auth\r\n  const { auth, firestore, messages } = useContext(AuthContext);\r\n  //firestore setup\r\n\r\n\r\n  //socket.io states\r\n  const [connected, setConnected] = useState('false');\r\n  const [pingData, setPingData] = useState('');\r\n  \r\n\r\n  console.log('helllooo there jes')\r\n\r\n  const scrollViewRef = useRef();\r\n\r\n  useEffect(() => {\r\n    scrollViewRef.current.scrollToEnd({ animated: false })\r\n    //var socket = io(socketEndpoint);\r\n  },[messages])\r\n\r\n\r\n  const ShowMessages = () => {\r\n      return messages && messages.slice(0).reverse().map(msg => <ChatMessage key={msg.id} message={msg} />)\r\n  }\r\n\r\n\r\n  const stylesChatBox = StyleSheet.create({\r\n    chatRoomContainer: {\r\n        flex: 1,\r\n        backgroundColor: '#2A2B2DFF',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    messagesContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        flexGrow: 0,\r\n        justifyContent: 'flex-start',\r\n        minWidth: width,\r\n        maxWidth: width,\r\n        maxHeight: 0.86*height,\r\n        minHeight: 0.86*height,\r\n        padding: 10 * fontRatio\r\n\r\n    },\r\n    SentMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row-reverse',\r\n        justifyContent: 'flex-start',\r\n        flexShrink: 1,\r\n        alignItems: 'center',\r\n        marginTop: 20 * fontRatio,\r\n        marginBottom: 10* fontRatio,\r\n        marginLeft: 50* fontRatio,\r\n        marginRight: 10* fontRatio,\r\n\r\n    },\r\n    SentMessageText:{\r\n        fontSize: 15,\r\n        backgroundColor: '#2DA8D8FF',\r\n        color: 'black',\r\n        marginRight: 10* fontRatio,\r\n        borderRadius: 0,\r\n        padding: 8* fontRatio,\r\n        maxWidth: 0.1* width\r\n    },\r\n    ReceivedMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginTop: 10* fontRatio,\r\n        marginBottom: 1* fontRatio,\r\n        marginLeft: 1* fontRatio,\r\n        marginRight: 10* fontRatio,\r\n        minHeight: 'auto'\r\n \r\n    },\r\n    ReceivedMessageText: {\r\n        fontSize: 15,\r\n        backgroundColor: '#D9514EFF',\r\n        color: '#fff',\r\n        marginLeft: 10* fontRatio,\r\n        borderRadius: 25,\r\n        padding: 8* fontRatio,\r\n        alignSelf: 'center',\r\n        maxWidth: 100\r\n    },\r\n    profileImage :{\r\n        width: 50* fontRatio,\r\n        height: 50* fontRatio,\r\n        borderRadius: 25,\r\n        alignSelf: 'center'\r\n    }\r\n});\r\n\r\n  return (\r\n    <View style={{minHeight: 0.93*height, maxHeight: 0.93*height,\r\n      top:0.07 * height, left: 0, position:'absolute',}}>\r\n        <View style={stylesChatBox.chatRoomContainer}>\r\n          <ScrollView\r\n            contentContainerStyle={stylesChatBox.messagesContainer}\r\n            ref={scrollViewRef}>\r\n\r\n            {ShowMessages()}\r\n          </ScrollView>\r\n        </View>\r\n      <SendMessageForm />\r\n    </View>\r\n\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}