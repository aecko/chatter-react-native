{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\screens\\\\ChatBox.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nvar io = require('socket.io-client');\n\nvar socketEndpoint = 'http://192.168.10.118:4167';\nexport default function ChatBox() {\n  var _this = this;\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firebase = _useContext.firebase;\n\n  var displayName = auth.currentUser.displayName;\n\n  var _useState = useState(auth.currentUser.photoURL),\n      _useState2 = _slicedToArray(_useState, 2),\n      photoUrl = _useState2[0],\n      setPhotoUrl = _useState2[1];\n\n  console.log(displayName);\n  var firestore = firebase.firestore();\n  var messageRef = firestore.collection('messages');\n  var query = messageRef.orderBy('createdAt').limit(25);\n\n  var _useCollectionData = useCollectionData(query, {\n    idField: 'id'\n  }),\n      _useCollectionData2 = _slicedToArray(_useCollectionData, 1),\n      messages = _useCollectionData2[0];\n\n  var _useState3 = useState('false'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      connected = _useState4[0],\n      setConnected = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pingData = _useState6[0],\n      setPingData = _useState6[1];\n\n  useEffect(function () {\n    var socket = io(socketEndpoint);\n    socket.on('connectClient', function () {\n      setConnected('true');\n    });\n    socket.on('ping', function (data) {\n      setPingData(data.date);\n    });\n  }, []);\n\n  var SignOut = function SignOut() {\n    return auth.currentUser && React.createElement(\"button\", {\n      onClick: function onClick() {\n        return auth.signOut();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, \"Sign Out\");\n  };\n\n  return React.createElement(View, {\n    style: stylesChatBox.chatRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Chat Screen\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, displayName), React.createElement(Image, {\n    source: {\n      uri: photoUrl\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), SignOut(), React.createElement(View, {\n    style: stylesChatBox.messagesContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, messages && messages.map(function (msg) {\n    return React.createElement(ChatMessage, {\n      key: msg.id,\n      message: msg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 42\n      }\n    });\n  })));\n}\nvar stylesChatBox = StyleSheet.create({\n  chatRoomContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  messagesContainer: {\n    flex: 1,\n    backgroundColor: '#85929e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/screens/ChatBox.js"],"names":["React","useContext","useEffect","useState","AuthContext","useCollectionData","io","require","socketEndpoint","ChatBox","auth","firebase","displayName","currentUser","photoURL","photoUrl","setPhotoUrl","console","log","firestore","messageRef","collection","query","orderBy","limit","idField","messages","connected","setConnected","pingData","setPingData","socket","on","data","date","SignOut","signOut","stylesChatBox","chatRoomContainer","uri","messagesContainer","map","msg","id","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\n\r\n\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst io = require('socket.io-client')\r\nconst socketEndpoint = 'http://192.168.10.118:4167'\r\n\r\nexport default function ChatBox() {\r\n  //firebase user auth\r\n  const {auth, firebase} = useContext(AuthContext);\r\n  const displayName = auth.currentUser.displayName\r\n  const [photoUrl, setPhotoUrl] = useState(auth.currentUser.photoURL)\r\n  console.log(displayName)\r\n\r\n  const firestore = firebase.firestore();\r\n  //firestore setup\r\n  const messageRef = firestore.collection('messages');\r\n  const query = messageRef.orderBy('createdAt').limit(25);\r\n  const [messages] = useCollectionData(query, {idField: 'id'})\r\n\r\n  //socket.io states\r\n  const [connected, setConnected] = useState('false');\r\n  const [pingData, setPingData] = useState('');\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    var socket = io(socketEndpoint);\r\n    socket.on('connectClient', () => {\r\n      setConnected('true');\r\n    })\r\n    socket.on('ping', (data) => {\r\n      setPingData(data.date);\r\n    })\r\n\r\n  }, [])\r\n\r\n  //sign out firebase user\r\n  const SignOut = () => {\r\n    return auth.currentUser && (\r\n      <button onClick={() => auth.signOut()}>Sign Out</button>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <View style={stylesChatBox.chatRoomContainer}>\r\n      <Text>Chat Screen</Text>\r\n      <Text>{displayName}</Text>\r\n      <Image  source={{uri: photoUrl}}/>\r\n      \r\n      {SignOut()}\r\n      <View style={stylesChatBox.messagesContainer}>\r\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\r\n      </View>\r\n    </View>\r\n    \r\n  )\r\n}\r\n\r\nconst stylesChatBox = StyleSheet.create({\r\n  chatRoomContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  messagesContainer:{\r\n    flex: 1,\r\n    backgroundColor: '#85929e',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}