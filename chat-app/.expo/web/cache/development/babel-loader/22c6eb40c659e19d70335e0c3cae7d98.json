{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\components\\\\SendMessageForm.js\";\nimport React, { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nexport default function SendMessageForm(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      messageText = _useState2[0],\n      _onChangeText = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth;\n\n  var sendMessage = function sendMessage() {\n    var _auth$currentUser, uid, photoURL;\n\n    return _regeneratorRuntime.async(function sendMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _auth$currentUser = auth.currentUser, uid = _auth$currentUser.uid, photoURL = _auth$currentUser.photoURL;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(props.messageRef.add({\n              text: messageText,\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n              uid: uid,\n              photoURL: photoURL\n            }));\n\n          case 3:\n            _onChangeText('');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.NewMessageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    multiline: true,\n    onSubmitEditing: function onSubmitEditing() {\n      return sendMessage();\n    },\n    style: styles.TextInput,\n    value: messageText,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    placeholder: \"Enter your message\",\n    t: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.SendMessageContainer,\n    onPress: function onPress() {\n      return sendMessage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.SendText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n}\nvar styles = StyleSheet.create({\n  NewMessageContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignContent: 'center',\n    minHeight: 0.07 * Dimensions.get('screen').height,\n    width: Dimensions.get('window').width,\n    backgroundColor: '#fff'\n  },\n  TextInput: {\n    fontSize: '1.5em',\n    minWidth: 0.85 * Dimensions.get('window').width\n  },\n  SendMessageContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2DA8D8FF',\n    minHeight: '100%'\n  },\n  SendText: {\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/components/SendMessageForm.js"],"names":["React","useContext","useState","AuthContext","firebase","SendMessageForm","props","messageText","onChangeText","auth","sendMessage","currentUser","uid","photoURL","messageRef","add","text","createdAt","firestore","FieldValue","serverTimestamp","styles","NewMessageContainer","TextInput","SendMessageContainer","SendText","StyleSheet","create","flex","flexDirection","justifyContent","alignContent","minHeight","Dimensions","get","height","width","backgroundColor","fontSize","minWidth","alignItems","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { StyleSheet, Text, View, Image, TextInput, TouchableOpacity, Dimensions } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\n\r\nexport default function SendMessageForm(props){\r\n    const [messageText, onChangeText] = useState('')\r\n    const {auth} = useContext(AuthContext)\r\n\r\n\r\n    const sendMessage = async() =>{\r\n        const {uid, photoURL} = auth.currentUser\r\n        await props.messageRef.add({\r\n            text: messageText,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL\r\n        }); \r\n        onChangeText('')\r\n    }\r\n    return(\r\n        <View style={styles.NewMessageContainer}>\r\n            <TextInput multiline={true} onSubmitEditing={() => sendMessage()} style={styles.TextInput} value={messageText} onChangeText={text => onChangeText(text)} placeholder='Enter your message' t></TextInput>\r\n            <TouchableOpacity style={styles.SendMessageContainer} onPress={() => sendMessage()}>\r\n                <Text style={styles.SendText}>Send</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    NewMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignContent: 'center',\r\n        minHeight: 0.07*Dimensions.get('screen').height,\r\n        width: Dimensions.get('window').width,\r\n        backgroundColor: '#fff',\r\n    },\r\n    TextInput: {\r\n        fontSize: '1.5em',\r\n        minWidth: 0.85*Dimensions.get('window').width,\r\n\r\n    },\r\n    SendMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#2DA8D8FF',\r\n        minHeight: '100%'\r\n    },\r\n    SendText: {\r\n        color: '#fff'\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}