{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\components\\\\CreateRoomScreen.js\";\nimport React, { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nexport default function CreateRoomScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      roomName = _useState2[0],\n      setRoomName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roomCode = _useState4[0],\n      setRoomCode = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore;\n\n  var createRoom = function createRoom() {\n    var roomCodeGen, _auth$currentUser, uid, photoURL, displayName, messageRef;\n\n    return _regeneratorRuntime.async(function createRoom$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(roomName);\n            roomCodeGen = '$' + Math.random().toString(36).replace('0.', '').toUpperCase();\n            _auth$currentUser = auth.currentUser, uid = _auth$currentUser.uid, photoURL = _auth$currentUser.photoURL, displayName = _auth$currentUser.displayName;\n            messageRef = firestore.collection('messages' + roomCode);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(messageRef.add({\n              text: displayName + ' created this room',\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n              uid: uid,\n              photoURL: photoURL\n            }));\n\n          case 6:\n            setRoomCode(roomCodeGen);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var fontRatio = PixelRatio.getFontScale();\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var createRoomPopupWidth = 400;\n\n  if (width < 1280) {\n    createRoomPopupWidth *= 0.75 * fontRatio;\n  }\n\n  var styles = StyleSheet.create({\n    CreateRoomContainer: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      height: 250 * fontRatio,\n      width: createRoomPopupWidth * fontRatio,\n      borderRadius: 20,\n      backgroundColor: '#fff',\n      position: 'absolute',\n      top: height / 2 - 125,\n      left: width / 2 - createRoomPopupWidth / 2,\n      zIndex: 100,\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 0,\n        height: -1\n      },\n      shadowOpacity: 0.9,\n      shadowRadius: 50,\n      elevation: 5\n    },\n    CreateRoomTitle: {\n      fontSize: 20,\n      zIndex: 100\n    },\n    CreateRoomTextInput: {\n      height: 70 * fontRatio,\n      width: createRoomPopupWidth - 100,\n      fontSize: 15 * fontRatio,\n      backgroundColor: '#d5d8dc',\n      borderRadius: 20,\n      marginBottom: 10 * fontRatio,\n      textAlign: 'center',\n      outlineWidth: 0\n    },\n    DarkOverlay: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      width: width,\n      height: height,\n      backgroundColor: '#0b2946',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 50,\n      opacity: 0.8\n    },\n    CreateRoomHeader: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: createRoomPopupWidth * fontRatio,\n      maxHeight: 60 * fontRatio,\n      borderTopLeftRadius: 20,\n      borderTopRightRadius: 20,\n      backgroundColor: '#3498db'\n    },\n    CreateRoomInputContainer: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    CreateRoomCloseButton: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#3498db',\n      marginTop: 15 * fontRatio,\n      marginLeft: 15 * fontRatio,\n      maxWidth: 30 * fontRatio,\n      maxHeight: 30 * fontRatio\n    },\n    CloseMenuText: {\n      fontSize: 20,\n      color: '#fff',\n      padding: 5 * fontRatio\n    },\n    CreateRoomSubmit: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 20,\n      backgroundColor: '#3498db',\n      maxHeight: 50 * fontRatio\n    },\n    CreateRoomButtonText: {\n      color: '#fff',\n      padding: 10 * fontRatio\n    }\n  });\n  return React.createElement(View, {\n    style: styles.DarkOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.CreateRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.CreateRoomHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.showCreateRoom(false);\n    },\n    style: styles.CreateRoomCloseButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.CloseMenuText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"X\")), React.createElement(Text, {\n    style: styles.CreateRoomTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"Create a new room\")), React.createElement(View, {\n    style: styles.CreateRoomInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, roomCode != '' ? React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: {\n      fontSize: 20 * fontRatio\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, \"Room Code:\"), React.createElement(Text, {\n    style: {\n      fontSize: 15 * fontRatio\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, roomCode)) : React.createElement(React.Fragment, null, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setRoomName(text);\n    },\n    style: styles.CreateRoomTextInput,\n    placeholder: \"Enter the name of the new room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return createRoom();\n    },\n    style: styles.CreateRoomSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.CreateRoomButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, \"Create Room\"))))));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/components/CreateRoomScreen.js"],"names":["React","useContext","useState","AuthContext","firebase","CreateRoomScreen","props","roomName","setRoomName","roomCode","setRoomCode","auth","firestore","createRoom","console","log","roomCodeGen","Math","random","toString","replace","toUpperCase","currentUser","uid","photoURL","displayName","messageRef","collection","add","text","createdAt","FieldValue","serverTimestamp","fontRatio","PixelRatio","getFontScale","useWindowDimensions","width","height","createRoomPopupWidth","styles","StyleSheet","create","CreateRoomContainer","flex","flexDirection","justifyContent","alignItems","borderRadius","backgroundColor","position","top","left","zIndex","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","CreateRoomTitle","fontSize","CreateRoomTextInput","marginBottom","textAlign","outlineWidth","DarkOverlay","opacity","CreateRoomHeader","maxHeight","borderTopLeftRadius","borderTopRightRadius","CreateRoomInputContainer","CreateRoomCloseButton","marginTop","marginLeft","maxWidth","CloseMenuText","color","padding","CreateRoomSubmit","CreateRoomButtonText","showCreateRoom"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, useWindowDimensions, PixelRatio } from 'react-native'\r\nimport AuthContext from '../contexts/AuthContext'\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\nexport default function CreateRoomScreen(props) {\r\n\r\n    const [roomName, setRoomName] = useState('')\r\n    const [roomCode, setRoomCode] = useState('')\r\n    const {auth, firestore} = useContext(AuthContext)\r\n\r\n\r\n    const createRoom = async() => {\r\n        console.log(roomName);\r\n        const roomCodeGen = '$' + Math.random().toString(36).replace('0.', '').toUpperCase()\r\n        const {uid, photoURL, displayName} = auth.currentUser\r\n        const messageRef = firestore.collection('messages' + roomCode);\r\n        await messageRef.add({\r\n            text: displayName + ' created this room',\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL\r\n        })\r\n        setRoomCode(roomCodeGen)\r\n    }\r\n    const fontRatio = PixelRatio.getFontScale()\r\n    const { width, height } = useWindowDimensions()\r\n    var createRoomPopupWidth = 400\r\n    if (width < 1280) {\r\n        createRoomPopupWidth *= 0.75 * fontRatio\r\n    }\r\n    const styles = StyleSheet.create({\r\n        CreateRoomContainer: {\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n            height: 250 * fontRatio,\r\n            width: createRoomPopupWidth * fontRatio,\r\n            borderRadius: 20,\r\n            backgroundColor: '#fff',\r\n            position: 'absolute',\r\n            top: height / 2 - 125,\r\n            left: width / 2 - createRoomPopupWidth / 2,\r\n            zIndex: 100,\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 0, height: -1, },\r\n            shadowOpacity: 0.9,\r\n            shadowRadius: 50,\r\n            elevation: 5,\r\n        },\r\n        CreateRoomTitle: {\r\n            fontSize: 20,\r\n            zIndex: 100,\r\n        },\r\n        CreateRoomTextInput: {\r\n            height: 70 * fontRatio,\r\n            width: createRoomPopupWidth - 100,\r\n            fontSize: 15 * fontRatio,\r\n            backgroundColor: '#d5d8dc',\r\n            borderRadius: 20,\r\n            marginBottom: 10 * fontRatio,\r\n            textAlign: 'center',\r\n            outlineWidth: 0\r\n        },\r\n        DarkOverlay: {\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'center',\r\n            width: width,\r\n            height: height,\r\n            backgroundColor: '#0b2946',\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 50,\r\n            opacity: 0.8\r\n        },\r\n        CreateRoomHeader: {\r\n            flex: 1,\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: createRoomPopupWidth * fontRatio,\r\n            maxHeight: 60 * fontRatio,\r\n            borderTopLeftRadius: 20,\r\n            borderTopRightRadius: 20,\r\n            backgroundColor: '#3498db'\r\n        },\r\n        CreateRoomInputContainer: {\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        CreateRoomCloseButton: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#3498db',\r\n            marginTop: 15 * fontRatio,\r\n            marginLeft: 15 * fontRatio,\r\n            maxWidth: 30 * fontRatio,\r\n            maxHeight: 30 * fontRatio\r\n\r\n        },\r\n        CloseMenuText: {\r\n            fontSize: 20,\r\n            color: '#fff',\r\n            padding: 5 * fontRatio,\r\n        },\r\n        CreateRoomSubmit: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            borderRadius: 20,\r\n            backgroundColor: '#3498db',\r\n            maxHeight: 50 * fontRatio\r\n        },\r\n        CreateRoomButtonText: {\r\n            color: '#fff',\r\n            padding: 10 * fontRatio\r\n        }\r\n\r\n    })\r\n    return (\r\n        <View style={styles.DarkOverlay}>\r\n            <View style={styles.CreateRoomContainer}>\r\n                <View style={styles.CreateRoomHeader} >\r\n                    <TouchableOpacity onPress={() => props.showCreateRoom(false)} style={styles.CreateRoomCloseButton}>\r\n                        <Text style={styles.CloseMenuText}>X</Text>\r\n                    </TouchableOpacity>\r\n                    <Text style={styles.CreateRoomTitle}>Create a new room</Text>\r\n                </ View>\r\n                <View style={styles.CreateRoomInputContainer}>\r\n                    {roomCode != '' ?\r\n                        <>\r\n                            <Text style={{ fontSize: 20 * fontRatio }} >Room Code:</Text>\r\n                            <Text style={{ fontSize: 15 * fontRatio }} >{roomCode}</Text>\r\n                        </> :\r\n                        <>\r\n                            <TextInput onChangeText={text => setRoomName(text)} style={styles.CreateRoomTextInput} placeholder='Enter the name of the new room'></TextInput>\r\n                            <TouchableOpacity onPress={() => createRoom()} style={styles.CreateRoomSubmit}>\r\n                                <Text style={styles.CreateRoomButtonText}>Create Room</Text>\r\n                            </TouchableOpacity>\r\n                        </>\r\n                    }\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}