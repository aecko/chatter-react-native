{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\src\\\\screens\\\\RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport AuthContext from \"../contexts/AuthContext\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth;\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    try {\n      auth.createUserWithEmailAndPassword(email.value, password.value).then(function (userCredential) {\n        auth.currentUser.createProfileChangeRequest().displayName = name.value.then(function () {\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'ChatBox'\n            }]\n          });\n        });\n      }).catch(function (error) {\n        if (error.code == \"auth/user-not-found\") {\n          setEmail(_objectSpread(_objectSpread({}, email), {}, {\n            error: 'User was not found. Try creating an account first.'\n          }));\n        }\n      });\n    } catch (error) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: 'Invalid input. Try again'\n      }));\n    }\n\n    ;\n    return React.createElement(Background, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, React.createElement(BackButton, {\n      goBack: navigation.goBack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), React.createElement(Logo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), React.createElement(Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Create Account\"), React.createElement(TextInput, {\n      label: \"Name\",\n      returnKeyType: \"next\",\n      value: name.value,\n      onChangeText: function onChangeText(text) {\n        return setName({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!name.error,\n      errorText: name.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), React.createElement(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), React.createElement(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      mode: \"contained\",\n      onPress: onSignUpPressed,\n      style: {\n        marginTop: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Sign Up\"), React.createElement(View, {\n      style: styles.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.replace('LoginScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Login\"))));\n  };\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/src/screens/RegisterScreen.js"],"names":["React","useContext","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","AuthContext","RegisterScreen","navigation","value","error","name","setName","email","setEmail","password","setPassword","auth","onSignUpPressed","nameError","emailError","passwordError","createUserWithEmailAndPassword","then","userCredential","currentUser","createProfileChangeRequest","displayName","reset","index","routes","catch","code","goBack","text","marginTop","styles","row","replace","link","StyleSheet","create","flexDirection","fontWeight","color","colors","primary"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport { nameValidator } from '../helpers/nameValidator'\nimport AuthContext from '../contexts/AuthContext'\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState({ value: '', error: '' })\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n  const {auth} = useContext(AuthContext)\n\n  const onSignUpPressed = () => {\n    const nameError = nameValidator(name.value)\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError || nameError) {\n      setName({ ...name, error: nameError })\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n    try {\n      auth.createUserWithEmailAndPassword(email.value, password.value)\n        .then((userCredential) => {\n          auth.currentUser.createProfileChangeRequest().displayName = name.value\n            .then(() => {\n              // Created Account\n              navigation.reset({\n                index: 0,\n                routes: [{ name: 'ChatBox' }],\n              })\n            })\n          // ...\n        })\n        .catch((error) => {\n          if (error.code == \"auth/user-not-found\") {\n            setEmail({ ...email, error: 'User was not found. Try creating an account first.' })\n          }\n        })\n    } catch (error) {\n      setEmail({ ...email, error: 'Invalid input. Try again' })\n      // ..\n    };\n\n\n    return (\n      <Background>\n        <BackButton goBack={navigation.goBack} />\n        <Logo />\n        <Header>Create Account</Header>\n        <TextInput\n          label=\"Name\"\n          returnKeyType=\"next\"\n          value={name.value}\n          onChangeText={(text) => setName({ value: text, error: '' })}\n          error={!!name.error}\n          errorText={name.error}\n        />\n        <TextInput\n          label=\"Email\"\n          returnKeyType=\"next\"\n          value={email.value}\n          onChangeText={(text) => setEmail({ value: text, error: '' })}\n          error={!!email.error}\n          errorText={email.error}\n          autoCapitalize=\"none\"\n          autoCompleteType=\"email\"\n          textContentType=\"emailAddress\"\n          keyboardType=\"email-address\"\n        />\n        <TextInput\n          label=\"Password\"\n          returnKeyType=\"done\"\n          value={password.value}\n          onChangeText={(text) => setPassword({ value: text, error: '' })}\n          error={!!password.error}\n          errorText={password.error}\n          secureTextEntry\n        />\n        <Button\n          mode=\"contained\"\n          onPress={onSignUpPressed}\n          style={{ marginTop: 24 }}\n        >\n          Sign Up\n      </Button>\n        <View style={styles.row}>\n          <Text>Already have an account? </Text>\n          <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\n            <Text style={styles.link}>Login</Text>\n          </TouchableOpacity>\n        </View>\n      </Background>\n    )\n  }\n}\n\n  const styles = StyleSheet.create({\n    row: {\n      flexDirection: 'row',\n      marginTop: 4,\n    },\n    link: {\n      fontWeight: 'bold',\n      color: theme.colors.primary,\n    },\n  })\n\n  export default RegisterScreen\n"]},"metadata":{},"sourceType":"module"}