{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\src\\\\screens\\\\MainChatScreen.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport ChatMessage from \"../components/ChatMessage\";\nimport SendMessageForm from \"../components/SendMessageForm\";\nimport NavBar from \"../components/NavBar\";\nimport 'firebase/firestore';\nimport UsersRooms from \"../components/UsersRooms\";\nimport Welcome from \"./Welcome\";\nimport { useDocumentData } from 'react-firebase-hooks/firestore';\n\nvar io = require('socket.io-client');\n\nvar socketEndpoint = 'http://192.168.10.118:4167';\nexport default function MainChatScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore,\n      messages = _useContext.messages;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var fontRatio = PixelRatio.getFontScale();\n  var userRef = firestore.collection('users').doc(auth.currentUser.uid);\n\n  var _useDocumentData = useDocumentData(userRef),\n      _useDocumentData2 = _slicedToArray(_useDocumentData, 1),\n      userDetails = _useDocumentData2[0];\n\n  var showRooms = false;\n  var chatBoxWidth = width;\n  console.log(userDetails);\n\n  if (width >= 800) {\n    chatBoxWidth = width - 90;\n    showRooms = true;\n  }\n\n  var _useState = useState('false'),\n      _useState2 = _slicedToArray(_useState, 2),\n      connected = _useState2[0],\n      setConnected = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pingData = _useState4[0],\n      setPingData = _useState4[1];\n\n  var scrollViewRef = useRef();\n  useEffect(function () {}, [messages]);\n\n  var ShowMessages = function ShowMessages() {\n    return messages && messages.slice(0).reverse().map(function (msg) {\n      return React.createElement(ChatMessage, {\n        key: msg.id,\n        message: msg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 63\n        }\n      });\n    });\n  };\n\n  var stylesChatBox = StyleSheet.create({\n    chatRoomContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      backgroundColor: '#2A2B2DFF',\n      alignItems: 'center',\n      justifyContent: 'center',\n      maxHeight: 0.93 * height,\n      maxWidth: width,\n      alignSelf: 'stretch'\n    },\n    messagesContainer: {\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      flexGrow: 100,\n      maxHeight: 0.86 * height,\n      minHeight: 0.86 * height,\n      padding: 10 * fontRatio\n    },\n    SentMessageContainer: {\n      flex: 1,\n      flexDirection: 'row-reverse',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      marginTop: 20 * fontRatio,\n      marginBottom: 10 * fontRatio,\n      marginLeft: 50 * fontRatio,\n      marginRight: 10 * fontRatio\n    },\n    SentMessageText: {\n      fontSize: 15,\n      backgroundColor: '#2DA8D8FF',\n      color: 'black',\n      marginRight: 10 * fontRatio,\n      borderRadius: 0,\n      padding: 8 * fontRatio,\n      maxWidth: 0.1 * width\n    },\n    ReceivedMessageContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginTop: 10 * fontRatio,\n      marginBottom: 1 * fontRatio,\n      marginLeft: 1 * fontRatio,\n      marginRight: 10 * fontRatio,\n      minHeight: 'auto'\n    },\n    ReceivedMessageText: {\n      fontSize: 15,\n      backgroundColor: '#D9514EFF',\n      color: '#fff',\n      marginLeft: 10 * fontRatio,\n      borderRadius: 25,\n      padding: 8 * fontRatio,\n      alignSelf: 'center',\n      maxWidth: 100\n    },\n    profileImage: {\n      width: 50 * fontRatio,\n      height: 50 * fontRatio,\n      borderRadius: 25,\n      alignSelf: 'center'\n    }\n  });\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      minHeight: height,\n      maxHeight: height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, showRooms ? React.createElement(UsersRooms, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 20\n    }\n  }) : null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(NavBar, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), userDetails ? React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      minHeight: 0.93 * height,\n      maxHeight: 0.93 * height,\n      minWidth: chatBoxWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: stylesChatBox.chatRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: stylesChatBox.messagesContainer,\n    ref: scrollViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, ShowMessages())), React.createElement(SendMessageForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }))) : React.createElement(Welcome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/src/screens/MainChatScreen.js"],"names":["React","useContext","useEffect","useRef","useState","AuthContext","ChatMessage","SendMessageForm","NavBar","UsersRooms","Welcome","useDocumentData","io","require","socketEndpoint","MainChatScreen","navigation","auth","firestore","messages","useWindowDimensions","width","height","fontRatio","PixelRatio","getFontScale","userRef","collection","doc","currentUser","uid","userDetails","showRooms","chatBoxWidth","console","log","connected","setConnected","pingData","setPingData","scrollViewRef","ShowMessages","slice","reverse","map","msg","id","stylesChatBox","StyleSheet","create","chatRoomContainer","flex","flexDirection","justifyContent","alignItems","backgroundColor","maxHeight","maxWidth","alignSelf","messagesContainer","flexGrow","minHeight","padding","SentMessageContainer","marginTop","marginBottom","marginLeft","marginRight","SentMessageText","fontSize","color","borderRadius","ReceivedMessageContainer","ReceivedMessageText","profileImage","minWidth"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, ScrollView, useWindowDimensions, PixelRatio } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\nimport ChatMessage from '../components/ChatMessage';\r\nimport SendMessageForm from '../components/SendMessageForm';\r\nimport NavBar from '../components/NavBar'\r\nimport 'firebase/firestore';\r\nimport UsersRooms from '../components/UsersRooms';\r\nimport Welcome from './Welcome';\r\nimport { useDocumentData } from 'react-firebase-hooks/firestore';\r\n\r\n\r\nconst io = require('socket.io-client')\r\nconst socketEndpoint = 'http://192.168.10.118:4167'\r\n\r\n\r\nexport default function MainChatScreen({ navigation }) {\r\n  //firebase user auth\r\n  const { auth, firestore, messages, } = useContext(AuthContext);\r\n\r\n  const { width, height } = useWindowDimensions()\r\n  const fontRatio = PixelRatio.getFontScale()\r\n  const userRef = firestore.collection('users').doc(auth.currentUser.uid)\r\n  const [userDetails] = useDocumentData(userRef)\r\n  var showRooms = false\r\n  var chatBoxWidth = width;\r\n  console.log(userDetails)\r\n  if(width >= 800){\r\n    chatBoxWidth = width-90\r\n    showRooms = true\r\n  }\r\n\r\n\r\n  //firestore setup\r\n\r\n  //socket.io states\r\n  const [connected, setConnected] = useState('false');\r\n  const [pingData, setPingData] = useState('');\r\n\r\n\r\n  const scrollViewRef = useRef();\r\n\r\n  useEffect(() => {\r\n    //scrollViewRef.current.scrollToEnd({ animated: false })\r\n    //var socket = io(socketEndpoint);\r\n  }, [messages])\r\n\r\n\r\n  const ShowMessages = () => {\r\n    return messages && messages.slice(0).reverse().map(msg => <ChatMessage key={msg.id} message={msg} />)\r\n  }\r\n\r\n\r\n  const stylesChatBox = StyleSheet.create({\r\n    chatRoomContainer: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      justifyContent: 'flex-start',\r\n      alignItems: 'center',\r\n      backgroundColor: '#2A2B2DFF',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      maxHeight: 0.93 * height,\r\n      maxWidth: width,\r\n      alignSelf: 'stretch'\r\n    },\r\n    messagesContainer: {\r\n      flexDirection: 'column',\r\n      justifyContent: 'flex-start',\r\n      flexGrow: 100,\r\n      maxHeight: 0.86 * height,\r\n      minHeight: 0.86 * height,\r\n      padding: 10 * fontRatio,\r\n    },\r\n    SentMessageContainer: {\r\n      flex: 1,\r\n      flexDirection: 'row-reverse',\r\n      justifyContent: 'flex-start',\r\n      alignItems: 'center',\r\n      marginTop: 20 * fontRatio,\r\n      marginBottom: 10 * fontRatio,\r\n      marginLeft: 50 * fontRatio,\r\n      marginRight: 10 * fontRatio,\r\n\r\n\r\n    },\r\n    SentMessageText: {\r\n      fontSize: 15,\r\n      backgroundColor: '#2DA8D8FF',\r\n      color: 'black',\r\n      marginRight: 10 * fontRatio,\r\n      borderRadius: 0,\r\n      padding: 8 * fontRatio,\r\n      maxWidth: 0.1 * width\r\n    },\r\n    ReceivedMessageContainer: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      marginTop: 10 * fontRatio,\r\n      marginBottom: 1 * fontRatio,\r\n      marginLeft: 1 * fontRatio,\r\n      marginRight: 10 * fontRatio,\r\n      minHeight: 'auto'\r\n\r\n    },\r\n    ReceivedMessageText: {\r\n      fontSize: 15,\r\n      backgroundColor: '#D9514EFF',\r\n      color: '#fff',\r\n      marginLeft: 10 * fontRatio,\r\n      borderRadius: 25,\r\n      padding: 8 * fontRatio,\r\n      alignSelf: 'center',\r\n      maxWidth: 100\r\n    },\r\n    profileImage: {\r\n      width: 50 * fontRatio,\r\n      height: 50 * fontRatio,\r\n      borderRadius: 25,\r\n      alignSelf: 'center'\r\n    }\r\n  });\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'flex-start', minHeight: height, maxHeight: height }}>\r\n      {showRooms ? <UsersRooms /> : null }\r\n      <View>\r\n        <NavBar navigation={navigation} />\r\n        {userDetails ?\r\n          <>\r\n            <View style={{ minHeight: 0.93 * height, maxHeight: 0.93 * height, minWidth: chatBoxWidth}}>\r\n              <View style={stylesChatBox.chatRoomContainer}>\r\n                <ScrollView\r\n                  contentContainerStyle={stylesChatBox.messagesContainer}\r\n                  ref={scrollViewRef}>\r\n                  {ShowMessages()}\r\n                </ScrollView>\r\n              </View>\r\n              <SendMessageForm />\r\n            </View>\r\n          </> : <Welcome />}\r\n      </View>\r\n    </View>\r\n\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}