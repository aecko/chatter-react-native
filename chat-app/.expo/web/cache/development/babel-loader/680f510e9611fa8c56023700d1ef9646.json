{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\screens\\\\ChatBox.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport ChatMessage from \"../components/ChatMessage\";\nimport SendMessageForm from \"../components/SendMessageForm\";\nimport stylesChatBox from \"../styles/chatBoxStyle\";\nimport 'firebase/firestore';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nvar io = require('socket.io-client');\n\nvar socketEndpoint = 'http://192.168.10.118:4167';\nexport default function ChatBox() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore;\n\n  var messageRef = firestore.collection('messages');\n  var query = messageRef.orderBy('createdAt', 'desc').limit(25);\n\n  var _useCollectionData = useCollectionData(query, {\n    idField: 'id'\n  }),\n      _useCollectionData2 = _slicedToArray(_useCollectionData, 1),\n      messages = _useCollectionData2[0];\n\n  var _useState3 = useState('false'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      connected = _useState4[0],\n      setConnected = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pingData = _useState6[0],\n      setPingData = _useState6[1];\n\n  useEffect(function () {\n    scrollViewRef.current.scrollToEnd({\n      animated: false\n    });\n    var socket = io(socketEndpoint);\n  });\n\n  var ShowMessages = function ShowMessages() {\n    return messages && messages.slice(0).reverse().map(function (msg) {\n      return React.createElement(ChatMessage, {\n        key: msg.id,\n        message: msg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 63\n        }\n      });\n    });\n  };\n\n  var scrollViewRef = useRef();\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, \"Loading...\") : React.createElement(View, {\n    style: stylesChatBox.chatRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: stylesChatBox.messagesContainer,\n    ref: scrollViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, ShowMessages()), React.createElement(SendMessageForm, {\n    messageRef: messageRef,\n    firestore: firestore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/screens/ChatBox.js"],"names":["React","useContext","useEffect","useRef","useState","AuthContext","ChatMessage","SendMessageForm","stylesChatBox","useCollectionData","io","require","socketEndpoint","ChatBox","loading","setLoading","auth","firestore","messageRef","collection","query","orderBy","limit","idField","messages","connected","setConnected","pingData","setPingData","scrollViewRef","current","scrollToEnd","animated","socket","ShowMessages","slice","reverse","map","msg","id","chatRoomContainer","messagesContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;;;;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,OAAO,oBAAP;AAEA,SAASC,iBAAT,QAAkC,gCAAlC;;AAEA,IAAMC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,IAAMC,cAAc,GAAG,4BAAvB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAAA,kBACFT,QAAQ,CAAC,IAAD,CADN;AAAA;AAAA,MACzBU,OADyB;AAAA,MAChBC,UADgB;;AAAA,oBAGJd,UAAU,CAACI,WAAD,CAHN;AAAA,MAGxBW,IAHwB,eAGxBA,IAHwB;AAAA,MAGlBC,SAHkB,eAGlBA,SAHkB;;AAKhC,MAAMC,UAAU,GAAGD,SAAS,CAACE,UAAV,CAAqB,UAArB,CAAnB;AACA,MAAMC,KAAK,GAAGF,UAAU,CAACG,OAAX,CAAmB,WAAnB,EAAgC,MAAhC,EAAwCC,KAAxC,CAA8C,EAA9C,CAAd;;AANgC,2BAObb,iBAAiB,CAACW,KAAD,EAAQ;AAAEG,IAAAA,OAAO,EAAE;AAAX,GAAR,CAPJ;AAAA;AAAA,MAOzBC,QAPyB;;AAAA,mBASEpB,QAAQ,CAAC,OAAD,CATV;AAAA;AAAA,MASzBqB,SATyB;AAAA,MASdC,YATc;;AAAA,mBAUAtB,QAAQ,CAAC,EAAD,CAVR;AAAA;AAAA,MAUzBuB,QAVyB;AAAA,MAUfC,WAVe;;AAWhC1B,EAAAA,SAAS,CAAC,YAAM;AACd2B,IAAAA,aAAa,CAACC,OAAd,CAAsBC,WAAtB,CAAkC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAlC;AAEA,QAAIC,MAAM,GAAGvB,EAAE,CAACE,cAAD,CAAf;AACD,GAJQ,CAAT;;AAOA,MAAMsB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAOV,QAAQ,IAAIA,QAAQ,CAACW,KAAT,CAAe,CAAf,EAAkBC,OAAlB,GAA4BC,GAA5B,CAAgC,UAAAC,GAAG;AAAA,aAAI,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,GAAG,CAACC,EAAtB;AAA0B,QAAA,OAAO,EAAED,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAAnC,CAAnB;AAED,GAHD;;AAIA,MAAMT,aAAa,GAAG1B,MAAM,EAA5B;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIW,OAAO,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GACP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,aAAa,CAACgC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,UAAD;AACE,IAAA,qBAAqB,EAAEhC,aAAa,CAACiC,iBADvC;AAEE,IAAA,GAAG,EAAEZ,aAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGK,YAAY,EAJf,CAFF,EASE,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEhB,UAA7B;AAAyC,IAAA,SAAS,EAAED,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAFJ,CADF;AAoBD","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, ScrollView } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\nimport ChatMessage from '../components/ChatMessage';\r\nimport SendMessageForm from '../components/SendMessageForm';\r\nimport stylesChatBox from '../styles/chatBoxStyle'\r\nimport 'firebase/firestore';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst io = require('socket.io-client')\r\nconst socketEndpoint = 'http://192.168.10.118:4167'\r\n\r\nexport default function ChatBox() {\r\n  const [loading, setLoading] = useState(true);\r\n  //firebase user auth\r\n  const { auth, firestore } = useContext(AuthContext);\r\n  //firestore setup\r\n  const messageRef = firestore.collection('messages');\r\n  const query = messageRef.orderBy('createdAt', 'desc').limit(25);\r\n  const [messages] = useCollectionData(query, { idField: 'id' })\r\n  //socket.io states\r\n  const [connected, setConnected] = useState('false');\r\n  const [pingData, setPingData] = useState('');\r\n  useEffect(() => {\r\n    scrollViewRef.current.scrollToEnd({ animated: false })\r\n\r\n    var socket = io(socketEndpoint);\r\n  })\r\n\r\n\r\n  const ShowMessages = () => {\r\n    return messages && messages.slice(0).reverse().map(msg => <ChatMessage key={msg.id} message={msg} />)\r\n\r\n  }\r\n  const scrollViewRef = useRef();\r\n\r\n  return (\r\n    <View>\r\n      { loading ? <Text>Loading...</Text> :\r\n        <View style={stylesChatBox.chatRoomContainer}>\r\n\r\n          <ScrollView\r\n            contentContainerStyle={stylesChatBox.messagesContainer}\r\n            ref={scrollViewRef}>\r\n\r\n            {ShowMessages()}\r\n          </ScrollView>\r\n\r\n          <SendMessageForm messageRef={messageRef} firestore={firestore} />\r\n\r\n        </View>\r\n      }\r\n    </View>\r\n\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}