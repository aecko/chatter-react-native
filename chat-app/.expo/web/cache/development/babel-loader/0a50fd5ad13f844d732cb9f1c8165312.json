{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport ChatBox from \"./screens/ChatBox\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport AuthContext from \"./contexts/AuthContext\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport NavBar from \"./components/NavBar\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAwoq0tivHGlinmnkqf3QCEQWCMuvccKCg\",\n  authDomain: \"reactnativechatapp-d07dc.firebaseapp.com\",\n  projectId: \"reactnativechatapp-d07dc\",\n  storageBucket: \"reactnativechatapp-d07dc.appspot.com\",\n  messagingSenderId: \"833518837423\",\n  appId: \"1:833518837423:web:1d1e6790c3c0ebd416be5a\",\n  measurementId: \"G-5WJ3ZD1GP6\"\n});\nvar auth = firebase.auth();\nvar firestore = firebase.firestore();\nvar MainNavigator = createStackNavigator({\n  Chat: ChatBox\n}, {\n  headerMode: 'none'\n});\nvar AppNavigator = createAppContainer(MainNavigator);\nexport default function App() {\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var _useAuthState = useAuthState(auth),\n      _useAuthState2 = _slicedToArray(_useAuthState, 2),\n      user = _useAuthState2[0],\n      loading = _useAuthState2[1];\n\n  var value = {\n    auth: auth,\n    firestore: firestore\n  };\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: 'column',\n      flexGrow: 0,\n      justifyContent: 'center',\n      backgroundColor: '#125495',\n      maxWidth: width,\n      maxHeight: height,\n      overflow: 'scroll'\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }\n  }, \"Loading...\") : React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(NavBar, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), user ? React.createElement(ChatBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }) : React.createElement(LoginScreen, {\n    auth: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/App.js"],"names":["StatusBar","React","useEffect","useState","createAppContainer","createStackNavigator","ChatBox","LoginScreen","AuthContext","firebase","useAuthState","NavBar","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","MainNavigator","Chat","headerMode","AppNavigator","App","useWindowDimensions","width","height","user","loading","value","styles","StyleSheet","create","container","flex","flexDirection","flexGrow","justifyContent","backgroundColor","maxWidth","maxHeight","overflow"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAGA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AAEA,OAAOC,WAAP;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,MAAP;AAEAF,QAAQ,CAACG,aAAT,CAAuB;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,0CAFS;AAGrBC,EAAAA,SAAS,EAAE,0BAHU;AAIrBC,EAAAA,aAAa,EAAE,sCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;AASA,IAAMC,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACA,IAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEA,IAAMC,aAAa,GAAGjB,oBAAoB,CACxC;AACEkB,EAAAA,IAAI,EAAEjB;AADR,CADwC,EAIxC;AACEkB,EAAAA,UAAU,EAAE;AADd,CAJwC,CAA1C;AAQA,IAAMC,YAAY,GAAGrB,kBAAkB,CAACkB,aAAD,CAAvC;AAGA,eAAe,SAASI,GAAT,GAAe;AAAA,6BACJC,mBAAmB,EADf;AAAA,MACrBC,KADqB,wBACrBA,KADqB;AAAA,MACdC,MADc,wBACdA,MADc;;AAAA,sBAEJnB,YAAY,CAACU,IAAD,CAFR;AAAA;AAAA,MAErBU,IAFqB;AAAA,MAEfC,OAFe;;AAG5B,MAAMC,KAAK,GAAG;AAAEZ,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,SAAS,EAATA;AAAR,GAAd;AACA,MAAMY,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,aAAa,EAAE,QAFN;AAGTC,MAAAA,QAAQ,EAAE,CAHD;AAITC,MAAAA,cAAc,EAAE,QAJP;AAKTC,MAAAA,eAAe,EAAE,SALR;AAMTC,MAAAA,QAAQ,EAAEd,KAND;AAOTe,MAAAA,SAAS,EAAEd,MAPF;AAQTe,MAAAA,QAAQ,EAAE;AARD;AADoB,GAAlB,CAAf;AAaA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GACN,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGA,IAAI,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEV,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxB,CAFJ,CADF;AAUD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions, StyleSheet, Text, View, useWindowDimensions } from 'react-native';\n\nimport { createAppContainer } from 'react-navigation'\nimport { createStackNavigator } from 'react-navigation-stack'\nimport ChatBox from './screens/ChatBox';\nimport LoginScreen from './screens/LoginScreen';\n\nimport AuthContext from './contexts/AuthContext'\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport NavBar from './components/NavBar';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAwoq0tivHGlinmnkqf3QCEQWCMuvccKCg\",\n  authDomain: \"reactnativechatapp-d07dc.firebaseapp.com\",\n  projectId: \"reactnativechatapp-d07dc\",\n  storageBucket: \"reactnativechatapp-d07dc.appspot.com\",\n  messagingSenderId: \"833518837423\",\n  appId: \"1:833518837423:web:1d1e6790c3c0ebd416be5a\",\n  measurementId: \"G-5WJ3ZD1GP6\"\n})\nconst auth = firebase.auth();\nconst firestore = firebase.firestore()\n\nconst MainNavigator = createStackNavigator(\n  {\n    Chat: ChatBox\n  },\n  {\n    headerMode: 'none'\n  }\n)\nconst AppNavigator = createAppContainer(MainNavigator)\n\n\nexport default function App() {\n  const {width, height} = useWindowDimensions()\n  const [user, loading] = useAuthState(auth);\n  const value = { auth, firestore }\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: 'column',\n      flexGrow: 0,\n      justifyContent: 'center',\n      backgroundColor: '#125495',\n      maxWidth: width,\n      maxHeight: height,\n      overflow: 'scroll'\n  \n    },\n  });\n  return (\n    <View style={styles.container}>\n      {loading ? <Text>Loading...</Text>:\n        <AuthContext.Provider value={value}>\n          <NavBar user={user} />\n          {user ? <ChatBox /> : <LoginScreen auth={auth} />}\n        </AuthContext.Provider>\n      }\n    </View>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}