{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\components\\\\UsersRooms.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport RoomIcon from \"./RoomIcon\";\nexport default function UsersRooms(props) {\n  var _this = this;\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      usersRooms = _useState2[0],\n      setUsersRooms = _useState2[1];\n\n  useEffect(function () {\n    var currentRooms = [];\n\n    if (auth.currentUser != null) {\n      var userRef = firestore.collection('users').doc(auth.currentUser.uid);\n      userRef.get().then(function (docSnapShot) {\n        if (docSnapShot.exists) {\n          currentRooms = docSnapShot.data().currentRooms;\n          setUsersRooms(currentRooms);\n        }\n      });\n    }\n  }, [auth]);\n  console.log('users rooms: ' + usersRooms);\n  return React.createElement(View, {\n    style: styles.RoomsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, usersRooms.map(function (roomCode, i) {\n    return React.createElement(RoomIcon, {\n      key: i,\n      roomCode: roomCode,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 46\n      }\n    });\n  }));\n}\nvar styles = StyleSheet.create({\n  RoomsContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignContent: 'center',\n    backgroundColor: '#fff',\n    minHeight: 900,\n    maxWidth: 90,\n    minWidth: 90,\n    zIndex: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/components/UsersRooms.js"],"names":["React","useContext","useEffect","useState","AuthContext","RoomIcon","UsersRooms","props","auth","firestore","usersRooms","setUsersRooms","currentRooms","currentUser","userRef","collection","doc","uid","get","then","docSnapShot","exists","data","console","log","styles","RoomsContainer","map","roomCode","i","StyleSheet","create","position","top","left","flex","flexDirection","justifyContent","alignContent","backgroundColor","minHeight","maxWidth","minWidth","zIndex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAAA,oBACVN,UAAU,CAACG,WAAD,CADA;AAAA,MAC9BI,IAD8B,eAC9BA,IAD8B;AAAA,MACxBC,SADwB,eACxBA,SADwB;;AAAA,kBAEFN,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,MAE/BO,UAF+B;AAAA,MAEnBC,aAFmB;;AAItCT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,YAAY,GAAG,EAAnB;;AACA,QAAIJ,IAAI,CAACK,WAAL,IAAoB,IAAxB,EAA8B;AAC1B,UAAMC,OAAO,GAAGL,SAAS,CAACM,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCR,IAAI,CAACK,WAAL,CAAiBI,GAAnD,CAAhB;AACAH,MAAAA,OAAO,CAACI,GAAR,GACKC,IADL,CACU,UAACC,WAAD,EAAiB;AACnB,YAAIA,WAAW,CAACC,MAAhB,EAAwB;AACpBT,UAAAA,YAAY,GAAGQ,WAAW,CAACE,IAAZ,GAAmBV,YAAlC;AACAD,UAAAA,aAAa,CAACC,YAAD,CAAb;AACH;AACJ,OANL;AAOH;AACJ,GAZQ,EAYP,CAACJ,IAAD,CAZO,CAAT;AAcAe,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBd,UAA9B;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,UAAU,CAACiB,GAAX,CAAe,UAACC,QAAD,EAAWC,CAAX;AAAA,WAAiB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,QAAQ,EAAED,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AAAA,GAAf,CADL,CADJ;AAKH;AAED,IAAMH,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,cAAc,EAAE;AACZM,IAAAA,QAAQ,EAAE,UADE;AAEZC,IAAAA,GAAG,EAAE,CAFO;AAGZC,IAAAA,IAAI,EAAE,CAHM;AAIZC,IAAAA,IAAI,EAAE,CAJM;AAKZC,IAAAA,aAAa,EAAE,QALH;AAMZC,IAAAA,cAAc,EAAE,YANJ;AAOZC,IAAAA,YAAY,EAAE,QAPF;AAQZC,IAAAA,eAAe,EAAE,MARL;AASZC,IAAAA,SAAS,EAAE,GATC;AAUZC,IAAAA,QAAQ,EAAE,EAVE;AAWZC,IAAAA,QAAQ,EAAE,EAXE;AAYZC,IAAAA,MAAM,EAAE;AAZI;AADa,CAAlB,CAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport AuthContext from '../contexts/AuthContext'\r\nimport RoomIcon from './RoomIcon'\r\n\r\nexport default function UsersRooms(props) {\r\n    const { auth, firestore } = useContext(AuthContext)\r\n    const [usersRooms, setUsersRooms] = useState([])\r\n\r\n    useEffect(() => {\r\n        var currentRooms = []\r\n        if (auth.currentUser != null) {\r\n            const userRef = firestore.collection('users').doc(auth.currentUser.uid)\r\n            userRef.get()\r\n                .then((docSnapShot) => {\r\n                    if (docSnapShot.exists) {\r\n                        currentRooms = docSnapShot.data().currentRooms\r\n                        setUsersRooms(currentRooms)\r\n                    }\r\n                })\r\n        }\r\n    },[auth])\r\n\r\n    console.log('users rooms: ' + usersRooms)\r\n    return (\r\n        <View style={styles.RoomsContainer}>\r\n            {usersRooms.map((roomCode, i) => <RoomIcon key={i} roomCode={roomCode} />)}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    RoomsContainer: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignContent: 'center',\r\n        backgroundColor: '#fff',\r\n        minHeight: 900,\r\n        maxWidth: 90,\r\n        minWidth: 90,\r\n        zIndex: 100\r\n\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}