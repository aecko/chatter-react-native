{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\screens\\\\ChatBox.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport ChatMessage from \"../components/ChatMessage\";\nimport SendMessageForm from \"../components/SendMessageForm\";\nimport 'firebase/firestore';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nvar io = require('socket.io-client');\n\nvar socketEndpoint = 'http://192.168.10.118:4167';\nexport default function ChatBox() {\n  var _this = this;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore;\n\n  var _useState3 = useState('false'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      connected = _useState4[0],\n      setConnected = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pingData = _useState6[0],\n      setPingData = _useState6[1];\n\n  var messageRef = firestore.collection('messages');\n  var query = messageRef.orderBy('createdAt', 'desc').limit(25);\n\n  var _useCollectionData = useCollectionData(query, {\n    idField: 'id'\n  }),\n      _useCollectionData2 = _slicedToArray(_useCollectionData, 1),\n      messages = _useCollectionData2[0];\n\n  useEffect(function () {\n    setLoading(false);\n\n    if (loading == false) {\n      scrollViewRef.current.scrollToEnd({\n        animated: false\n      });\n    }\n\n    var socket = io(socketEndpoint);\n  }, []);\n\n  var ShowMessages = function ShowMessages() {\n    return messages && messages.slice(0).reverse().map(function (msg) {\n      return React.createElement(ChatMessage, {\n        key: msg.id,\n        message: msg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 63\n        }\n      });\n    });\n  };\n\n  var scrollViewRef = useRef();\n  var stylesChatBox = StyleSheet.create({\n    chatRoomContainer: {\n      flex: 1,\n      backgroundColor: '#2A2B2DFF',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    messagesContainer: {\n      flex: 1,\n      flexDirection: 'column',\n      flexGrow: 1,\n      justifyContent: 'flex-start',\n      minWidth: width,\n      maxWidth: width,\n      maxHeight: 0.86 * height\n    },\n    SentMessageContainer: {\n      flex: 1,\n      flexDirection: 'row-reverse',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      marginTop: '1em',\n      marginBottom: '1em',\n      marginLeft: '10em',\n      marginRight: '1em',\n      minHeight: 'auto'\n    },\n    SentMessageText: {\n      fontSize: 15,\n      backgroundColor: '#2DA8D8FF',\n      color: 'black',\n      marginRight: 10,\n      borderRadius: 25,\n      padding: 8,\n      alignSelf: 'center',\n      maxWidth: '100%'\n    },\n    ReceivedMessageContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      marginTop: '1em',\n      marginBottom: '1em',\n      marginLeft: '1em',\n      marginRight: '10em',\n      flexGrow: 1,\n      minHeight: 'auto'\n    },\n    ReceivedMessageText: {\n      fontSize: 15,\n      backgroundColor: '#D9514EFF',\n      color: '#fff',\n      marginLeft: 10,\n      borderRadius: 25,\n      padding: 8,\n      alignSelf: 'center',\n      maxWidth: '100%'\n    },\n    profileImage: {\n      width: 50,\n      height: 50,\n      borderRadius: 25,\n      alignSelf: 'center'\n    }\n  });\n  return React.createElement(View, {\n    style: {\n      minHeight: 0.93 * height,\n      maxHeight: 0.93 * height,\n      marginTop: 0.07 * height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, \"Loading...\") : React.createElement(View, {\n    style: stylesChatBox.chatRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: stylesChatBox.messagesContainer,\n    ref: scrollViewRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, ShowMessages())), React.createElement(SendMessageForm, {\n    messageRef: messageRef,\n    firestore: firestore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/screens/ChatBox.js"],"names":["React","useContext","useEffect","useRef","useState","AuthContext","ChatMessage","SendMessageForm","useCollectionData","io","require","socketEndpoint","ChatBox","useWindowDimensions","width","height","loading","setLoading","auth","firestore","connected","setConnected","pingData","setPingData","messageRef","collection","query","orderBy","limit","idField","messages","scrollViewRef","current","scrollToEnd","animated","socket","ShowMessages","slice","reverse","map","msg","id","stylesChatBox","StyleSheet","create","chatRoomContainer","flex","backgroundColor","alignItems","justifyContent","messagesContainer","flexDirection","flexGrow","minWidth","maxWidth","maxHeight","SentMessageContainer","marginTop","marginBottom","marginLeft","marginRight","minHeight","SentMessageText","fontSize","color","borderRadius","padding","alignSelf","ReceivedMessageContainer","ReceivedMessageText","profileImage"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, ScrollView, useWindowDimensions } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\nimport ChatMessage from '../components/ChatMessage';\r\nimport SendMessageForm from '../components/SendMessageForm';\r\n//import stylesChatBox from '../styles/chatBoxStyle'\r\nimport 'firebase/firestore';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst io = require('socket.io-client')\r\nconst socketEndpoint = 'http://192.168.10.118:4167'\r\n\r\n\r\nexport default function ChatBox() {\r\n  const {width, height} = useWindowDimensions()\r\n  const [loading, setLoading] = useState(true);\r\n  //firebase user auth\r\n  const { auth, firestore } = useContext(AuthContext);\r\n  //firestore setup\r\n\r\n\r\n  //socket.io states\r\n  const [connected, setConnected] = useState('false');\r\n  const [pingData, setPingData] = useState('');\r\n  \r\n  const messageRef = firestore.collection('messages');\r\n  const query = messageRef.orderBy('createdAt', 'desc').limit(25);\r\n  const [messages] = useCollectionData(query, { idField: 'id' })\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    if(loading ==false){\r\n      scrollViewRef.current.scrollToEnd({ animated: false })\r\n    }\r\n    var socket = io(socketEndpoint);\r\n  }, [])\r\n\r\n\r\n  const ShowMessages = () => {\r\n    return messages && messages.slice(0).reverse().map(msg => <ChatMessage key={msg.id} message={msg} />)\r\n\r\n  }\r\n  const scrollViewRef = useRef();\r\n\r\n  const stylesChatBox = StyleSheet.create({\r\n    chatRoomContainer: {\r\n        flex: 1,\r\n        backgroundColor: '#2A2B2DFF',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    messagesContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        justifyContent: 'flex-start',\r\n        minWidth: width,\r\n        maxWidth: width,\r\n        maxHeight: 0.86*height\r\n\r\n\r\n    },\r\n    SentMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row-reverse',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        marginTop: '1em',\r\n        marginBottom: '1em',\r\n        marginLeft: '10em',\r\n        marginRight: '1em',\r\n        minHeight: 'auto',\r\n    },\r\n    SentMessageText:{\r\n        fontSize: 15,\r\n        backgroundColor: '#2DA8D8FF',\r\n        color: 'black',\r\n        marginRight: 10,\r\n        borderRadius: 25,\r\n        padding: 8,\r\n        alignSelf: 'center',\r\n        maxWidth: '100%'\r\n    },\r\n    ReceivedMessageContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        marginTop: '1em',\r\n        marginBottom: '1em',\r\n        marginLeft: '1em',\r\n        marginRight: '10em',\r\n        flexGrow: 1,\r\n        minHeight: 'auto'\r\n \r\n    },\r\n    ReceivedMessageText: {\r\n        fontSize: 15,\r\n        backgroundColor: '#D9514EFF',\r\n        color: '#fff',\r\n        marginLeft: 10,\r\n        borderRadius: 25,\r\n        padding: 8,\r\n        alignSelf: 'center',\r\n        maxWidth: '100%'\r\n    },\r\n    profileImage :{\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25,\r\n        alignSelf: 'center'\r\n    }\r\n});\r\n\r\n  return (\r\n    <View style={{minHeight: 0.93*height, maxHeight: 0.93*height, marginTop:0.07 * height}}>\r\n      { loading ? <Text>Loading...</Text> :\r\n        <View style={stylesChatBox.chatRoomContainer}>\r\n\r\n          <ScrollView\r\n            contentContainerStyle={stylesChatBox.messagesContainer}\r\n            ref={scrollViewRef}>\r\n\r\n            {ShowMessages()}\r\n          </ScrollView>\r\n        </View>\r\n      }\r\n      <SendMessageForm messageRef={messageRef} firestore={firestore} />\r\n    </View>\r\n\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}