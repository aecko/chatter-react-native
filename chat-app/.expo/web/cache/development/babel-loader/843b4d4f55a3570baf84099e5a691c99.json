{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Seamus\\\\Documents\\\\ChatApp\\\\chat-app\\\\screens\\\\ChatBox.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport ChatMessage from \"../components/ChatMessage\";\nimport SendMessageForm from \"../components/SendMessageForm\";\nimport stylesChatBox from \"../styles/chatBoxStyle\";\nimport 'firebase/firestore';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nvar io = require('socket.io-client');\n\nvar socketEndpoint = 'http://192.168.10.118:4167';\nvar messageRef;\nvar _ref = [],\n    messages = _ref[0];\nexport default function ChatBox() {\n  var _this = this;\n\n  var _useContext = useContext(AuthContext),\n      auth = _useContext.auth,\n      firestore = _useContext.firestore;\n\n  var _auth$currentUser = auth.currentUser,\n      displayName = _auth$currentUser.displayName,\n      photoURL = _auth$currentUser.photoURL;\n  useEffect(function () {\n    messageRef = firestore.collection('messages');\n    var query = messageRef.orderBy('createdAt', 'desc').limit(25);\n\n    var _useCollectionData = useCollectionData(query, {\n      idField: 'id'\n    });\n\n    var _useCollectionData2 = _slicedToArray(_useCollectionData, 1);\n\n    messages = _useCollectionData2[0];\n\n    var _useState = useState('false'),\n        _useState2 = _slicedToArray(_useState, 2),\n        connected = _useState2[0],\n        setConnected = _useState2[1];\n\n    var _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pingData = _useState4[0],\n        setPingData = _useState4[1];\n\n    var socket = io(socketEndpoint);\n    socket.on('connectClient', function () {\n      setConnected('true');\n    });\n    socket.on('ping', function (data) {\n      setPingData(data.date);\n    });\n  }, []);\n\n  var ShowMessages = function ShowMessages() {\n    return messages && messages.slice(0).reverse().map(function (msg) {\n      return React.createElement(ChatMessage, {\n        key: msg.id,\n        message: msg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 63\n        }\n      });\n    });\n  };\n\n  var scrollViewRef = useRef(null);\n  return React.createElement(View, {\n    style: stylesChatBox.chatRoomContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    stylesChatBox: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Chat Screen\"), React.createElement(ScrollView, {\n    contentContainerStyle: stylesChatBox.messagesContainer,\n    ref: scrollViewRef,\n    onChange: function onChange() {\n      return scrollViewRef.scrollToEnd({\n        animated: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, ShowMessages()), React.createElement(SendMessageForm, {\n    messageRef: messageRef,\n    firestore: firestore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Seamus/Documents/ChatApp/chat-app/screens/ChatBox.js"],"names":["React","useContext","useEffect","useRef","useState","AuthContext","ChatMessage","SendMessageForm","stylesChatBox","useCollectionData","io","require","socketEndpoint","messageRef","messages","ChatBox","auth","firestore","currentUser","displayName","photoURL","collection","query","orderBy","limit","idField","connected","setConnected","pingData","setPingData","socket","on","data","date","ShowMessages","slice","reverse","map","msg","id","scrollViewRef","chatRoomContainer","messagesContainer","scrollToEnd","animated"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, ScrollView } from 'react-native';\r\nimport AuthContext from '../contexts/AuthContext';\r\nimport ChatMessage from '../components/ChatMessage';\r\nimport SendMessageForm from '../components/SendMessageForm';\r\nimport stylesChatBox from '../styles/chatBoxStyle'\r\nimport 'firebase/firestore';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst io = require('socket.io-client')\r\nconst socketEndpoint = 'http://192.168.10.118:4167'\r\nvar messageRef;\r\nvar [messages] = [];\r\n\r\nexport default function ChatBox() {\r\n  //firebase user auth\r\n  const {auth, firestore} = useContext(AuthContext);\r\n  const {displayName, photoURL} = auth.currentUser\r\n\r\n  useEffect(() => {\r\n  //firestore setup\r\n    messageRef = firestore.collection('messages');\r\n    const query = messageRef.orderBy('createdAt', 'desc').limit(25);\r\n    [messages] = useCollectionData(query, {idField: 'id'})\r\n\r\n    //socket.io states\r\n    const [connected, setConnected] = useState('false');\r\n    const [pingData, setPingData] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n    var socket = io(socketEndpoint);\r\n    socket.on('connectClient', () => {\r\n      setConnected('true');\r\n    })\r\n    socket.on('ping', (data) => {\r\n      setPingData(data.date);\r\n    })\r\n\r\n  }, [])\r\n\r\n\r\n  const ShowMessages = () => {\r\n    return messages && messages.slice(0).reverse().map(msg => <ChatMessage key={msg.id} message={msg}/>)\r\n  \r\n  }\r\n  var scrollViewRef = useRef(null);\r\n  \r\n  return (\r\n    <View style={stylesChatBox.chatRoomContainer}>\r\n      \r\n      <Text stylesChatBox>Chat Screen</Text>\r\n\r\n      <ScrollView contentContainerStyle={stylesChatBox.messagesContainer} ref={scrollViewRef}\r\n             onChange={() => scrollViewRef.scrollToEnd({animated: true})}>\r\n        {ShowMessages()}\r\n      </ScrollView>\r\n\r\n      <SendMessageForm messageRef={messageRef} firestore={firestore}/>\r\n\r\n    </View>\r\n    \r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}